<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sfa.Core.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.SfaCoreDelegates">
            <summary>Contains custom delegates used for the stubs and shims of Sfa.Core</summary>
        </member>
        <member name="T:Sfa.Core.Context.Fakes.ShimAdjustableNetworkContext">
            <summary>Shim type of Sfa.Core.Context.AdjustableNetworkContext</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimAdjustableNetworkContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimAdjustableNetworkContext.#ctor(Sfa.Core.Context.AdjustableNetworkContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Context.Fakes.ShimAdjustableNetworkContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimAdjustableNetworkContext.AllInstances.ClearAdditionalDateTimeAdjuster">
            <summary>Sets the shim of AdjustableNetworkContext.ClearAdditionalDateTimeAdjuster()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimAdjustableNetworkContext.AllInstances.CurrentDateGet">
            <summary>Sets the shim of AdjustableNetworkContext.get_CurrentDate()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimAdjustableNetworkContext.AllInstances.CurrentDateTimeGet">
            <summary>Sets the shim of AdjustableNetworkContext.get_CurrentDateTime()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimAdjustableNetworkContext.AllInstances.NewGuidGet">
            <summary>Sets the shim of AdjustableNetworkContext.get_NewGuid()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimAdjustableNetworkContext.AllInstances.SetAdditionalDateTimeAdjusterFuncOfDateTimeDateTime">
            <summary>Sets the shim of AdjustableNetworkContext.SetAdditionalDateTimeAdjuster(Func`2&lt;DateTime,DateTime&gt; additionalDateTimeAdjuster)</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimAdjustableNetworkContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimAdjustableNetworkContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimAdjustableNetworkContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimAdjustableNetworkContext.Bind(Sfa.Core.Context.INetworkContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimAdjustableNetworkContext.ClearAdditionalDateTimeAdjuster">
            <summary>Sets the shim of AdjustableNetworkContext.ClearAdditionalDateTimeAdjuster()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimAdjustableNetworkContext.ConstructorFuncOfDateTimeDateTimeIGuidProvider">
            <summary>Sets the shim of AdjustableNetworkContext.AdjustableNetworkContext(Func`2&lt;DateTime,DateTime&gt; defaultDateTimeAdjuster, IGuidProvider guidProvider)</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimAdjustableNetworkContext.CurrentDateGet">
            <summary>Sets the shim of AdjustableNetworkContext.get_CurrentDate()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimAdjustableNetworkContext.CurrentDateTimeGet">
            <summary>Sets the shim of AdjustableNetworkContext.get_CurrentDateTime()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimAdjustableNetworkContext.NewGuidGet">
            <summary>Sets the shim of AdjustableNetworkContext.get_NewGuid()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimAdjustableNetworkContext.SetAdditionalDateTimeAdjusterFuncOfDateTimeDateTime">
            <summary>Sets the shim of AdjustableNetworkContext.SetAdditionalDateTimeAdjuster(Func`2&lt;DateTime,DateTime&gt; additionalDateTimeAdjuster)</summary>
        </member>
        <member name="T:Sfa.Core.Context.Fakes.ShimApplicationContext">
            <summary>Shim type of Sfa.Core.Context.ApplicationContext</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimApplicationContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimApplicationContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimApplicationContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimApplicationContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimApplicationContext.GetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of ApplicationContext.Get()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimApplicationContext.LoggerGet">
            <summary>Sets the shim of ApplicationContext.get_Logger()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimApplicationContext.NetworkContextGet">
            <summary>Sets the shim of ApplicationContext.get_NetworkContext()</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimApplicationContext.SetOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Sets the shim of ApplicationContext.Set(!!0 instance)</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimApplicationContext.SetupIContextStorageILoggerINetworkContext">
            <summary>Sets the shim of ApplicationContext.Setup(IContextStorage contextStorage, ILogger logger, INetworkContext networkContext)</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimApplicationContext.StaticConstructor">
            <summary>Sets the shim of ApplicationContext.ApplicationContext()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimApplicationContext.TearDown">
            <summary>Sets the shim of ApplicationContext.TearDown()</summary>
        </member>
        <member name="T:Sfa.Core.Context.Fakes.ShimCallContextStorage">
            <summary>Shim type of Sfa.Core.Context.CallContextStorage</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimCallContextStorage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimCallContextStorage.#ctor(Sfa.Core.Context.CallContextStorage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Context.Fakes.ShimCallContextStorage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimCallContextStorage.AllInstances.CleanAndDisposeStringArray">
            <summary>Sets the shim of CallContextStorage.CleanAndDispose(String[] names)</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimCallContextStorage.AllInstances.GetDataOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Sfa.Core.Context.CallContextStorage,System.String,``0})">
            <summary>Sets the shim of CallContextStorage.GetData(String name)</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimCallContextStorage.AllInstances.SetDataOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Sfa.Core.Context.CallContextStorage,System.String,``0})">
            <summary>Sets the shim of CallContextStorage.SetData(String name, !!0 instance)</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimCallContextStorage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimCallContextStorage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimCallContextStorage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimCallContextStorage.Bind(Sfa.Core.Context.IContextStorage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimCallContextStorage.CleanAndDisposeStringArray">
            <summary>Sets the shim of CallContextStorage.CleanAndDispose(String[] names)</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimCallContextStorage.Constructor">
            <summary>Sets the shim of CallContextStorage.CallContextStorage()</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimCallContextStorage.GetDataOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets the shim of CallContextStorage.GetData(String name)</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimCallContextStorage.SetDataOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0})">
            <summary>Sets the shim of CallContextStorage.SetData(String name, !!0 instance)</summary>
        </member>
        <member name="T:Sfa.Core.Context.Fakes.ShimDefaultGuidProvider">
            <summary>Shim type of Sfa.Core.Context.DefaultGuidProvider</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimDefaultGuidProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimDefaultGuidProvider.#ctor(Sfa.Core.Context.DefaultGuidProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Context.Fakes.ShimDefaultGuidProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimDefaultGuidProvider.AllInstances.NewGuid">
            <summary>Sets the shim of DefaultGuidProvider.NewGuid()</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimDefaultGuidProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimDefaultGuidProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimDefaultGuidProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimDefaultGuidProvider.Bind(Sfa.Core.Context.IGuidProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimDefaultGuidProvider.Constructor">
            <summary>Sets the shim of DefaultGuidProvider.DefaultGuidProvider()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimDefaultGuidProvider.NewGuid">
            <summary>Sets the shim of DefaultGuidProvider.NewGuid()</summary>
        </member>
        <member name="T:Sfa.Core.Context.Fakes.ShimDefaultNetworkContext">
            <summary>Shim type of Sfa.Core.Context.DefaultNetworkContext</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimDefaultNetworkContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimDefaultNetworkContext.#ctor(Sfa.Core.Context.DefaultNetworkContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Context.Fakes.ShimDefaultNetworkContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimDefaultNetworkContext.AllInstances.CurrentDateGet">
            <summary>Sets the shim of DefaultNetworkContext.get_CurrentDate()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimDefaultNetworkContext.AllInstances.CurrentDateTimeGet">
            <summary>Sets the shim of DefaultNetworkContext.get_CurrentDateTime()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimDefaultNetworkContext.AllInstances.CurrentUtcDateTimeGet">
            <summary>Sets the shim of DefaultNetworkContext.get_CurrentUtcDateTime()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimDefaultNetworkContext.AllInstances.NewGuidGet">
            <summary>Sets the shim of DefaultNetworkContext.get_NewGuid()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimDefaultNetworkContext.AllInstances.SetMemoryStreamFactoryFuncOfMemoryStream">
            <summary>Sets the shim of DefaultNetworkContext.SetMemoryStreamFactory(Func`1&lt;MemoryStream&gt; memoryStreamfactory)</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimDefaultNetworkContext.AllInstances.ToBytesStream">
            <summary>Sets the shim of DefaultNetworkContext.ToBytes(Stream stream)</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimDefaultNetworkContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimDefaultNetworkContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimDefaultNetworkContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimDefaultNetworkContext.Bind(Sfa.Core.Context.INetworkContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimDefaultNetworkContext.Constructor">
            <summary>Sets the shim of DefaultNetworkContext.DefaultNetworkContext()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimDefaultNetworkContext.CurrentDateGet">
            <summary>Sets the shim of DefaultNetworkContext.get_CurrentDate()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimDefaultNetworkContext.CurrentDateTimeGet">
            <summary>Sets the shim of DefaultNetworkContext.get_CurrentDateTime()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimDefaultNetworkContext.CurrentUtcDateTimeGet">
            <summary>Sets the shim of DefaultNetworkContext.get_CurrentUtcDateTime()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimDefaultNetworkContext.NewGuidGet">
            <summary>Sets the shim of DefaultNetworkContext.get_NewGuid()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimDefaultNetworkContext.SetMemoryStreamFactoryFuncOfMemoryStream">
            <summary>Sets the shim of DefaultNetworkContext.SetMemoryStreamFactory(Func`1&lt;MemoryStream&gt; memoryStreamfactory)</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimDefaultNetworkContext.ToBytesStream">
            <summary>Sets the shim of DefaultNetworkContext.ToBytes(Stream stream)</summary>
        </member>
        <member name="T:Sfa.Core.Context.Fakes.ShimNumericallyIncrementingGuidProvider">
            <summary>Shim type of Sfa.Core.Context.NumericallyIncrementingGuidProvider</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimNumericallyIncrementingGuidProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimNumericallyIncrementingGuidProvider.#ctor(Sfa.Core.Context.NumericallyIncrementingGuidProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Context.Fakes.ShimNumericallyIncrementingGuidProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimNumericallyIncrementingGuidProvider.AllInstances.NewGuid">
            <summary>Sets the shim of NumericallyIncrementingGuidProvider.NewGuid()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimNumericallyIncrementingGuidProvider.AllInstances.SetSeedValueInt32">
            <summary>Sets the shim of NumericallyIncrementingGuidProvider.SetSeedValue(Int32 seed)</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimNumericallyIncrementingGuidProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimNumericallyIncrementingGuidProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimNumericallyIncrementingGuidProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimNumericallyIncrementingGuidProvider.Bind(Sfa.Core.Context.IGuidProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimNumericallyIncrementingGuidProvider.Constructor">
            <summary>Sets the shim of NumericallyIncrementingGuidProvider.NumericallyIncrementingGuidProvider()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimNumericallyIncrementingGuidProvider.NewGuid">
            <summary>Sets the shim of NumericallyIncrementingGuidProvider.NewGuid()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimNumericallyIncrementingGuidProvider.SetSeedValueInt32">
            <summary>Sets the shim of NumericallyIncrementingGuidProvider.SetSeedValue(Int32 seed)</summary>
        </member>
        <member name="T:Sfa.Core.Context.Fakes.ShimStaticContextStorage">
            <summary>Shim type of Sfa.Core.Context.StaticContextStorage</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimStaticContextStorage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimStaticContextStorage.#ctor(Sfa.Core.Context.StaticContextStorage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Context.Fakes.ShimStaticContextStorage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimStaticContextStorage.AllInstances.CleanAndDisposeStringArray">
            <summary>Sets the shim of StaticContextStorage.CleanAndDispose(String[] names)</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimStaticContextStorage.AllInstances.GetDataOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Sfa.Core.Context.StaticContextStorage,System.String,``0})">
            <summary>Sets the shim of StaticContextStorage.GetData(String name)</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimStaticContextStorage.AllInstances.SetDataOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Sfa.Core.Context.StaticContextStorage,System.String,``0})">
            <summary>Sets the shim of StaticContextStorage.SetData(String name, !!0 instance)</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimStaticContextStorage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimStaticContextStorage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimStaticContextStorage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimStaticContextStorage.Bind(Sfa.Core.Context.IContextStorage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimStaticContextStorage.CleanAndDisposeStringArray">
            <summary>Sets the shim of StaticContextStorage.CleanAndDispose(String[] names)</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimStaticContextStorage.Constructor">
            <summary>Sets the shim of StaticContextStorage.StaticContextStorage()</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimStaticContextStorage.GetDataOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets the shim of StaticContextStorage.GetData(String name)</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.ShimStaticContextStorage.SetDataOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0})">
            <summary>Sets the shim of StaticContextStorage.SetData(String name, !!0 instance)</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.ShimStaticContextStorage.StaticConstructor">
            <summary>Sets the shim of StaticContextStorage.StaticContextStorage()</summary>
        </member>
        <member name="T:Sfa.Core.Context.Fakes.StubAdjustableNetworkContext">
            <summary>Stub type of Sfa.Core.Context.AdjustableNetworkContext</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.StubAdjustableNetworkContext.#ctor(System.Func{System.DateTime,System.DateTime},Sfa.Core.Context.IGuidProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubAdjustableNetworkContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubAdjustableNetworkContext.CurrentDate">
            <summary>Sets the stub of AdjustableNetworkContext.get_CurrentDate()</summary>
        </member>
        <member name="F:Sfa.Core.Context.Fakes.StubAdjustableNetworkContext.CurrentDateGet">
            <summary>Sets the stub of AdjustableNetworkContext.get_CurrentDate()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubAdjustableNetworkContext.CurrentDateTime">
            <summary>Sets the stub of AdjustableNetworkContext.get_CurrentDateTime()</summary>
        </member>
        <member name="F:Sfa.Core.Context.Fakes.StubAdjustableNetworkContext.CurrentDateTimeGet">
            <summary>Sets the stub of AdjustableNetworkContext.get_CurrentDateTime()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubAdjustableNetworkContext.CurrentUtcDateTime">
            <summary>Sets the stub of DefaultNetworkContext.get_CurrentUtcDateTime()</summary>
        </member>
        <member name="F:Sfa.Core.Context.Fakes.StubAdjustableNetworkContext.CurrentUtcDateTimeGet">
            <summary>Sets the stub of DefaultNetworkContext.get_CurrentUtcDateTime()</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.StubAdjustableNetworkContext.InitializeStub">
            <summary>Initializes a new instance of type StubAdjustableNetworkContext</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubAdjustableNetworkContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubAdjustableNetworkContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubAdjustableNetworkContext.NewGuid">
            <summary>Sets the stub of AdjustableNetworkContext.get_NewGuid()</summary>
        </member>
        <member name="F:Sfa.Core.Context.Fakes.StubAdjustableNetworkContext.NewGuidGet">
            <summary>Sets the stub of AdjustableNetworkContext.get_NewGuid()</summary>
        </member>
        <member name="T:Sfa.Core.Context.Fakes.StubCallContextStorage">
            <summary>Stub type of Sfa.Core.Context.CallContextStorage</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.StubCallContextStorage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubCallContextStorage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.StubCallContextStorage.GetData``1(System.String)">
            <summary>Sets the stub of CallContextStorage.GetData(String name)</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.StubCallContextStorage.GetDataOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets stubs of GetData(String name)</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.StubCallContextStorage.InitializeStub">
            <summary>Initializes a new instance of type StubCallContextStorage</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubCallContextStorage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubCallContextStorage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.StubCallContextStorage.SetData``1(System.String,``0)">
            <summary>Sets the stub of CallContextStorage.SetData(String name, !!0 instance)</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.StubCallContextStorage.SetDataOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0})">
            <summary>Sets stubs of SetData(String name, !!0 instance)</summary>
        </member>
        <member name="T:Sfa.Core.Context.Fakes.StubDefaultGuidProvider">
            <summary>Stub type of Sfa.Core.Context.DefaultGuidProvider</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.StubDefaultGuidProvider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubDefaultGuidProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.StubDefaultGuidProvider.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultGuidProvider</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubDefaultGuidProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubDefaultGuidProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Sfa.Core.Context.Fakes.StubDefaultNetworkContext">
            <summary>Stub type of Sfa.Core.Context.DefaultNetworkContext</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.StubDefaultNetworkContext.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubDefaultNetworkContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubDefaultNetworkContext.CurrentDate">
            <summary>Sets the stub of DefaultNetworkContext.get_CurrentDate()</summary>
        </member>
        <member name="F:Sfa.Core.Context.Fakes.StubDefaultNetworkContext.CurrentDateGet">
            <summary>Sets the stub of DefaultNetworkContext.get_CurrentDate()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubDefaultNetworkContext.CurrentDateTime">
            <summary>Sets the stub of DefaultNetworkContext.get_CurrentDateTime()</summary>
        </member>
        <member name="F:Sfa.Core.Context.Fakes.StubDefaultNetworkContext.CurrentDateTimeGet">
            <summary>Sets the stub of DefaultNetworkContext.get_CurrentDateTime()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubDefaultNetworkContext.CurrentUtcDateTime">
            <summary>Sets the stub of DefaultNetworkContext.get_CurrentUtcDateTime()</summary>
        </member>
        <member name="F:Sfa.Core.Context.Fakes.StubDefaultNetworkContext.CurrentUtcDateTimeGet">
            <summary>Sets the stub of DefaultNetworkContext.get_CurrentUtcDateTime()</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.StubDefaultNetworkContext.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultNetworkContext</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubDefaultNetworkContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubDefaultNetworkContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubDefaultNetworkContext.NewGuid">
            <summary>Sets the stub of DefaultNetworkContext.get_NewGuid()</summary>
        </member>
        <member name="F:Sfa.Core.Context.Fakes.StubDefaultNetworkContext.NewGuidGet">
            <summary>Sets the stub of DefaultNetworkContext.get_NewGuid()</summary>
        </member>
        <member name="T:Sfa.Core.Context.Fakes.StubIContextStorage">
            <summary>Stub type of Sfa.Core.Context.IContextStorage</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.StubIContextStorage.#ctor">
            <summary>Initializes a new instance of type StubIContextStorage</summary>
        </member>
        <member name="F:Sfa.Core.Context.Fakes.StubIContextStorage.CleanAndDisposeStringArray">
            <summary>Sets the stub of IContextStorage.CleanAndDispose(String[] names)</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.StubIContextStorage.GetDataOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets stubs of GetData(String name)</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.StubIContextStorage.SetDataOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0})">
            <summary>Sets stubs of SetData(String name, !!0 instance)</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.StubIContextStorage.Sfa#Core#Context#IContextStorage#CleanAndDispose(System.String[])">
            <summary>Sets the stub of IContextStorage.CleanAndDispose(String[] names)</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.StubIContextStorage.Sfa#Core#Context#IContextStorage#GetData``1(System.String)">
            <summary>Sets the stub of IContextStorage.GetData(String name)</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.StubIContextStorage.Sfa#Core#Context#IContextStorage#SetData``1(System.String,``0)">
            <summary>Sets the stub of IContextStorage.SetData(String name, !!0 instance)</summary>
        </member>
        <member name="T:Sfa.Core.Context.Fakes.StubIGuidProvider">
            <summary>Stub type of Sfa.Core.Context.IGuidProvider</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.StubIGuidProvider.#ctor">
            <summary>Initializes a new instance of type StubIGuidProvider</summary>
        </member>
        <member name="F:Sfa.Core.Context.Fakes.StubIGuidProvider.NewGuid">
            <summary>Sets the stub of IGuidProvider.NewGuid()</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.StubIGuidProvider.Sfa#Core#Context#IGuidProvider#NewGuid">
            <summary>Sets the stub of IGuidProvider.NewGuid()</summary>
        </member>
        <member name="T:Sfa.Core.Context.Fakes.StubINetworkContext">
            <summary>Stub type of Sfa.Core.Context.INetworkContext</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.StubINetworkContext.#ctor">
            <summary>Initializes a new instance of type StubINetworkContext</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubINetworkContext.Sfa#Core#Context#INetworkContext#CurrentDate">
            <summary>Sets the stub of INetworkContext.get_CurrentDate()</summary>
        </member>
        <member name="F:Sfa.Core.Context.Fakes.StubINetworkContext.CurrentDateGet">
            <summary>Sets the stub of INetworkContext.get_CurrentDate()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubINetworkContext.Sfa#Core#Context#INetworkContext#CurrentDateTime">
            <summary>Sets the stub of INetworkContext.get_CurrentDateTime()</summary>
        </member>
        <member name="F:Sfa.Core.Context.Fakes.StubINetworkContext.CurrentDateTimeGet">
            <summary>Sets the stub of INetworkContext.get_CurrentDateTime()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubINetworkContext.Sfa#Core#Context#INetworkContext#CurrentUtcDateTime">
            <summary>Sets the stub of INetworkContext.get_CurrentUtcDateTime()</summary>
        </member>
        <member name="F:Sfa.Core.Context.Fakes.StubINetworkContext.CurrentUtcDateTimeGet">
            <summary>Sets the stub of INetworkContext.get_CurrentUtcDateTime()</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubINetworkContext.Sfa#Core#Context#INetworkContext#NewGuid">
            <summary>Sets the stub of INetworkContext.get_NewGuid()</summary>
        </member>
        <member name="F:Sfa.Core.Context.Fakes.StubINetworkContext.NewGuidGet">
            <summary>Sets the stub of INetworkContext.get_NewGuid()</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.StubINetworkContext.Sfa#Core#Context#INetworkContext#ToBytes(System.IO.Stream)">
            <summary>Sets the stub of INetworkContext.ToBytes(Stream stream)</summary>
        </member>
        <member name="F:Sfa.Core.Context.Fakes.StubINetworkContext.ToBytesStream">
            <summary>Sets the stub of INetworkContext.ToBytes(Stream stream)</summary>
        </member>
        <member name="T:Sfa.Core.Context.Fakes.StubNumericallyIncrementingGuidProvider">
            <summary>Stub type of Sfa.Core.Context.NumericallyIncrementingGuidProvider</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.StubNumericallyIncrementingGuidProvider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubNumericallyIncrementingGuidProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.StubNumericallyIncrementingGuidProvider.InitializeStub">
            <summary>Initializes a new instance of type StubNumericallyIncrementingGuidProvider</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubNumericallyIncrementingGuidProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubNumericallyIncrementingGuidProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Sfa.Core.Context.Fakes.StubStaticContextStorage">
            <summary>Stub type of Sfa.Core.Context.StaticContextStorage</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.StubStaticContextStorage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubStaticContextStorage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Sfa.Core.Context.Fakes.StubStaticContextStorage.InitializeStub">
            <summary>Initializes a new instance of type StubStaticContextStorage</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubStaticContextStorage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Context.Fakes.StubStaticContextStorage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.ShimAsyncCommand`2">
            <summary>Shim type of Sfa.Core.Data.AsyncCommand`2</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.#ctor(Sfa.Core.Data.AsyncCommand{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.AllInstances.AuthoriseAsync">
            <summary>Sets the shim of AsyncCommand`2.AuthoriseAsync()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.AllInstances.ExecuteAsync">
            <summary>Sets the shim of AsyncCommand`2.ExecuteAsync()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.AllInstances.OnAfterExecuteAsyncException">
            <summary>Sets the shim of AsyncCommand`2.OnAfterExecuteAsync(Exception exception)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.AllInstances.OnAuthoriseAsync">
            <summary>Sets the shim of AsyncCommand`2.OnAuthoriseAsync()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.AllInstances.OnBeforeExecuteAsync">
            <summary>Sets the shim of AsyncCommand`2.OnBeforeExecuteAsync()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.AllInstances.OnBeforeInitialiseTargetAsync">
            <summary>Sets the shim of AsyncCommand`2.OnBeforeInitialiseTargetAsync()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.AllInstances.OnInitialiseTargetAsync">
            <summary>Sets the shim of AsyncCommand`2.OnInitialiseTargetAsync()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.AllInstances.ResultGet">
            <summary>Sets the shim of AsyncCommand`2.get_Result()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.AllInstances.ResultSetT1">
            <summary>Sets the shim of AsyncCommand`2.set_Result(!1 value)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.AllInstances.TargetGet">
            <summary>Sets the shim of AsyncCommand`2.get_Target()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.AllInstances.TargetSetT0">
            <summary>Sets the shim of AsyncCommand`2.set_Target(!0 value)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.AuthoriseAsync">
            <summary>Sets the shim of AsyncCommand`2.AuthoriseAsync()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.Bind(Sfa.Core.Data.IAsyncCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.Constructor">
            <summary>Sets the shim of AsyncCommand`2.AsyncCommand`2()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.ExecuteAsync">
            <summary>Sets the shim of AsyncCommand`2.ExecuteAsync()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.OnAfterExecuteAsyncException">
            <summary>Sets the shim of AsyncCommand`2.OnAfterExecuteAsync(Exception exception)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.OnAuthoriseAsync">
            <summary>Sets the shim of AsyncCommand`2.OnAuthoriseAsync()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.OnBeforeExecuteAsync">
            <summary>Sets the shim of AsyncCommand`2.OnBeforeExecuteAsync()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.OnBeforeInitialiseTargetAsync">
            <summary>Sets the shim of AsyncCommand`2.OnBeforeInitialiseTargetAsync()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.OnInitialiseTargetAsync">
            <summary>Sets the shim of AsyncCommand`2.OnInitialiseTargetAsync()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.ResultGet">
            <summary>Sets the shim of AsyncCommand`2.get_Result()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.ResultSetT1">
            <summary>Sets the shim of AsyncCommand`2.set_Result(!1 value)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.TargetGet">
            <summary>Sets the shim of AsyncCommand`2.get_Target()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimAsyncCommand`2.TargetSetT0">
            <summary>Sets the shim of AsyncCommand`2.set_Target(!0 value)</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.ShimCommand`2">
            <summary>Shim type of Sfa.Core.Data.Command`2</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimCommand`2.#ctor(Sfa.Core.Data.Command{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.ShimCommand`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.AllInstances.Authorise">
            <summary>Sets the shim of Command`2.Authorise()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.AllInstances.Execute">
            <summary>Sets the shim of Command`2.Execute()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.AllInstances.OnAfterExecuteException">
            <summary>Sets the shim of Command`2.OnAfterExecute(Exception exception)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.AllInstances.OnAuthorise">
            <summary>Sets the shim of Command`2.OnAuthorise()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.AllInstances.OnBeforeExecute">
            <summary>Sets the shim of Command`2.OnBeforeExecute()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.AllInstances.OnBeforeInitialiseTarget">
            <summary>Sets the shim of Command`2.OnBeforeInitialiseTarget()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.AllInstances.OnInitialiseTarget">
            <summary>Sets the shim of Command`2.OnInitialiseTarget()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.AllInstances.PropertiesToIgnoreForToStringGet">
            <summary>Sets the shim of Command`2.get_PropertiesToIgnoreForToString()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.AllInstances.ResultGet">
            <summary>Sets the shim of Command`2.get_Result()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.AllInstances.ResultSetT1">
            <summary>Sets the shim of Command`2.set_Result(!1 value)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.AllInstances.TargetGet">
            <summary>Sets the shim of Command`2.get_Target()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.AllInstances.TargetSetT0">
            <summary>Sets the shim of Command`2.set_Target(!0 value)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.AllInstances.ToString01">
            <summary>Sets the shim of Command`2.ToString()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.Authorise">
            <summary>Sets the shim of Command`2.Authorise()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimCommand`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimCommand`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimCommand`2.Bind(Sfa.Core.Data.ICommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.Constructor">
            <summary>Sets the shim of Command`2.Command`2()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.Execute">
            <summary>Sets the shim of Command`2.Execute()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.OnAfterExecuteException">
            <summary>Sets the shim of Command`2.OnAfterExecute(Exception exception)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.OnAuthorise">
            <summary>Sets the shim of Command`2.OnAuthorise()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.OnBeforeExecute">
            <summary>Sets the shim of Command`2.OnBeforeExecute()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.OnBeforeInitialiseTarget">
            <summary>Sets the shim of Command`2.OnBeforeInitialiseTarget()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.OnInitialiseTarget">
            <summary>Sets the shim of Command`2.OnInitialiseTarget()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.PropertiesToIgnoreForToStringGet">
            <summary>Sets the shim of Command`2.get_PropertiesToIgnoreForToString()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.ResultGet">
            <summary>Sets the shim of Command`2.get_Result()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.ResultSetT1">
            <summary>Sets the shim of Command`2.set_Result(!1 value)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.TargetGet">
            <summary>Sets the shim of Command`2.get_Target()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.TargetSetT0">
            <summary>Sets the shim of Command`2.set_Target(!0 value)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimCommand`2.ToString">
            <summary>Sets the shim of Command`2.ToString()</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.ShimQuery`2">
            <summary>Shim type of Sfa.Core.Data.Query`2</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimQuery`2.#ctor(Sfa.Core.Data.Query{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.ActualPageSizeGet">
            <summary>Sets the shim of Query`2.get_ActualPageSize()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.AddProjectionIQueryableOfT1">
            <summary>Sets the shim of Query`2.AddProjection(IQueryable`1&lt;!1&gt; query)</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.ShimQuery`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.AllInstances.ActualPageSizeGet">
            <summary>Sets the shim of Query`2.get_ActualPageSize()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.AllInstances.CreateGetListQueryIQueryableOfT1">
            <summary>Sets the shim of Query`2.CreateGetListQuery(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.AllInstances.ExecuteGetListIQueryableOfT1">
            <summary>Sets the shim of Query`2.ExecuteGetList(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.AllInstances.ExecuteGetListSizeIQueryableOfT1">
            <summary>Sets the shim of Query`2.ExecuteGetListSize(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.AllInstances.ExecuteGetListSumIQueryableOfT1">
            <summary>Sets the shim of Query`2.ExecuteGetListSum(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.AllInstances.ExecuteResultListIQueryableOfT1">
            <summary>Sets the shim of Query`2.ExecuteResultList(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.AllInstances.GetAnyItemsExist">
            <summary>Sets the shim of Query`2.GetAnyItemsExist()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.AllInstances.GetCount">
            <summary>Sets the shim of Query`2.GetCount()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.AllInstances.GetExists">
            <summary>Sets the shim of Query`2.GetExists()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.AllInstances.GetExistsAsync">
            <summary>Sets the shim of Query`2.GetExistsAsync()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.AllInstances.GetList">
            <summary>Sets the shim of Query`2.GetList()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.AllInstances.GetResultListIQueryableOfT1">
            <summary>Sets the shim of Query`2.GetResultList(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.AllInstances.GetResultListInt32Int32">
            <summary>Sets the shim of Query`2.GetResultList(Int32 pageNumber, Int32 pageSize)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.AllInstances.GetResultListSizeIQueryableOfT1">
            <summary>Sets the shim of Query`2.GetResultListSize(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.AllInstances.GetSingle">
            <summary>Sets the shim of Query`2.GetSingle()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.AllInstances.GetSingleIfExists">
            <summary>Sets the shim of Query`2.GetSingleIfExists()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.AllInstances.GetUnderlyingQuery">
            <summary>Sets the shim of Query`2.GetUnderlyingQuery()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.AllInstances.NewResultListIListOfT0">
            <summary>Sets the shim of Query`2.NewResultList(IList`1&lt;!0&gt; list)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.AllInstances.PageNumberGet">
            <summary>Sets the shim of Query`2.get_PageNumber()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.AllInstances.PageNumberSetInt32">
            <summary>Sets the shim of Query`2.set_PageNumber(Int32 value)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.AllInstances.PageSizeGet">
            <summary>Sets the shim of Query`2.get_PageSize()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.AllInstances.PageSizeSetInt32">
            <summary>Sets the shim of Query`2.set_PageSize(Int32 value)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.AllInstances.ShouldBeTruncatedGet">
            <summary>Sets the shim of Query`2.get_ShouldBeTruncated()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimQuery`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimQuery`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimQuery`2.Bind(Sfa.Core.Data.IQuery{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.Constructor">
            <summary>Sets the shim of Query`2.Query`2()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.CreateGetListQueryIQueryableOfT1">
            <summary>Sets the shim of Query`2.CreateGetListQuery(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.ExecuteGetListIQueryableOfT1">
            <summary>Sets the shim of Query`2.ExecuteGetList(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.ExecuteGetListSizeIQueryableOfT1">
            <summary>Sets the shim of Query`2.ExecuteGetListSize(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.ExecuteGetListSumIQueryableOfT1">
            <summary>Sets the shim of Query`2.ExecuteGetListSum(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.ExecuteResultListIQueryableOfT1">
            <summary>Sets the shim of Query`2.ExecuteResultList(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.GetAnyItemsExist">
            <summary>Sets the shim of Query`2.GetAnyItemsExist()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.GetCount">
            <summary>Sets the shim of Query`2.GetCount()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.GetExists">
            <summary>Sets the shim of Query`2.GetExists()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.GetExistsAsync">
            <summary>Sets the shim of Query`2.GetExistsAsync()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.GetList">
            <summary>Sets the shim of Query`2.GetList()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.GetResultListIQueryableOfT1">
            <summary>Sets the shim of Query`2.GetResultList(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.GetResultListInt32Int32">
            <summary>Sets the shim of Query`2.GetResultList(Int32 pageNumber, Int32 pageSize)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.GetResultListSizeIQueryableOfT1">
            <summary>Sets the shim of Query`2.GetResultListSize(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.GetSingle">
            <summary>Sets the shim of Query`2.GetSingle()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.GetSingleIfExists">
            <summary>Sets the shim of Query`2.GetSingleIfExists()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.GetUnderlyingQuery">
            <summary>Sets the shim of Query`2.GetUnderlyingQuery()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.IsProjectionGet">
            <summary>Sets the shim of Query`2.get_IsProjection()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.NewResultListIListOfT0">
            <summary>Sets the shim of Query`2.NewResultList(IList`1&lt;!0&gt; list)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.PageNumberGet">
            <summary>Sets the shim of Query`2.get_PageNumber()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.PageNumberSetInt32">
            <summary>Sets the shim of Query`2.set_PageNumber(Int32 value)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.PageSizeGet">
            <summary>Sets the shim of Query`2.get_PageSize()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.PageSizeSetInt32">
            <summary>Sets the shim of Query`2.set_PageSize(Int32 value)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQuery`2.ShouldBeTruncatedGet">
            <summary>Sets the shim of Query`2.get_ShouldBeTruncated()</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.ShimQueryableMapper">
            <summary>Shim type of Sfa.Core.Data.QueryableMapper</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimQueryableMapper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimQueryableMapper.#ctor(Sfa.Core.Data.QueryableMapper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.ShimQueryableMapper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimQueryableMapper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimQueryableMapper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQueryableMapper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQueryableMapper.Constructor">
            <summary>Sets the shim of QueryableMapper.QueryableMapper()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimQueryableMapper.MapOf2IQueryableOfM0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``1}})">
            <summary>Sets the shim of QueryableMapper.Map(IQueryable`1&lt;!!0&gt; from)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimQueryableMapper.RegisterOf2FuncOfIQueryableOfM0IQueryableOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``1}}})">
            <summary>Sets the shim of QueryableMapper.Register(Func`2&lt;IQueryable`1&lt;!!0&gt;,IQueryable`1&lt;!!1&gt;&gt; mappingFunction)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimQueryableMapper.StaticConstructor">
            <summary>Sets the shim of QueryableMapper.QueryableMapper()</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.ShimResultList`1">
            <summary>Shim type of Sfa.Core.Data.ResultList`1</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimResultList`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimResultList`1.#ctor(Sfa.Core.Data.ResultList{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.ShimResultList`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.AllInstances.CurrentPageGet">
            <summary>Sets the shim of ResultList`1.get_CurrentPage()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.AllInstances.CurrentPageSetInt32">
            <summary>Sets the shim of ResultList`1.set_CurrentPage(Int32 value)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.AllInstances.IsPopulatedGet">
            <summary>Sets the shim of ResultList`1.get_IsPopulated()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.AllInstances.IsPopulatedSetBoolean">
            <summary>Sets the shim of ResultList`1.set_IsPopulated(Boolean value)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.AllInstances.IsTruncatedGet">
            <summary>Sets the shim of ResultList`1.get_IsTruncated()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.AllInstances.IsTruncatedSetBoolean">
            <summary>Sets the shim of ResultList`1.set_IsTruncated(Boolean value)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.AllInstances.PageSizeGet">
            <summary>Sets the shim of ResultList`1.get_PageSize()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.AllInstances.PageSizeSetInt32">
            <summary>Sets the shim of ResultList`1.set_PageSize(Int32 value)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.AllInstances.TotalNumberOfPagesGet">
            <summary>Sets the shim of ResultList`1.get_TotalNumberOfPages()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.AllInstances.TotalNumberOfPagesSetInt32">
            <summary>Sets the shim of ResultList`1.set_TotalNumberOfPages(Int32 value)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.AllInstances.TotalNumberOfRecordsGet">
            <summary>Sets the shim of ResultList`1.get_TotalNumberOfRecords()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.AllInstances.TotalNumberOfRecordsSetInt32">
            <summary>Sets the shim of ResultList`1.set_TotalNumberOfRecords(Int32 value)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimResultList`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimResultList`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimResultList`1.Bind(Sfa.Core.Data.IResultList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimResultList`1.Bind(Sfa.Core.Data.IResultList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimResultList`1.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimResultList`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimResultList`1.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimResultList`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimResultList`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimResultList`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimResultList`1.Bind(System.Collections.Generic.IReadOnlyCollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.ShimResultList`1.Bind(System.Collections.Generic.IReadOnlyList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.Constructor">
            <summary>Sets the shim of ResultList`1.ResultList`1()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.ConstructorIEnumerableOfT0">
            <summary>Sets the shim of ResultList`1.ResultList`1(IEnumerable`1&lt;!0&gt; list)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.ConstructorIEnumerableOfT0Boolean">
            <summary>Sets the shim of ResultList`1.ResultList`1(IEnumerable`1&lt;!0&gt; list, Boolean truncated)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.ConstructorIEnumerableOfT0BooleanBoolean">
            <summary>Sets the shim of ResultList`1.ResultList`1(IEnumerable`1&lt;!0&gt; list, Boolean truncated, Boolean populated)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.ConstructorIEnumerableOfT0BooleanInt32Int32Int32Int32">
            <summary>Sets the shim of ResultList`1.ResultList`1(IEnumerable`1&lt;!0&gt; list, Boolean truncated, Int32 totalNumberOfRecords, Int32 totalNumberOfPages, Int32 pageSize, Int32 currentPage)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.ConstructorT0">
            <summary>Sets the shim of ResultList`1.ResultList`1(!0 obj)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.CurrentPageGet">
            <summary>Sets the shim of ResultList`1.get_CurrentPage()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.CurrentPageSetInt32">
            <summary>Sets the shim of ResultList`1.set_CurrentPage(Int32 value)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.IsPopulatedGet">
            <summary>Sets the shim of ResultList`1.get_IsPopulated()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.IsPopulatedSetBoolean">
            <summary>Sets the shim of ResultList`1.set_IsPopulated(Boolean value)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.IsTruncatedGet">
            <summary>Sets the shim of ResultList`1.get_IsTruncated()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.IsTruncatedSetBoolean">
            <summary>Sets the shim of ResultList`1.set_IsTruncated(Boolean value)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.PageSizeGet">
            <summary>Sets the shim of ResultList`1.get_PageSize()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.PageSizeSetInt32">
            <summary>Sets the shim of ResultList`1.set_PageSize(Int32 value)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.TotalNumberOfPagesGet">
            <summary>Sets the shim of ResultList`1.get_TotalNumberOfPages()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.TotalNumberOfPagesSetInt32">
            <summary>Sets the shim of ResultList`1.set_TotalNumberOfPages(Int32 value)</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.TotalNumberOfRecordsGet">
            <summary>Sets the shim of ResultList`1.get_TotalNumberOfRecords()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.ShimResultList`1.TotalNumberOfRecordsSetInt32">
            <summary>Sets the shim of ResultList`1.set_TotalNumberOfRecords(Int32 value)</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.StubAsyncCommand`2">
            <summary>Stub type of Sfa.Core.Data.AsyncCommand`2</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubAsyncCommand`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubAsyncCommand`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubAsyncCommand`2.ExecuteAsync">
            <summary>Sets the stub of AsyncCommand`2.ExecuteAsync()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubAsyncCommand`2.ExecuteAsync01">
            <summary>Sets the stub of AsyncCommand`2.ExecuteAsync()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubAsyncCommand`2.InitializeStub">
            <summary>Initializes a new instance of type StubAsyncCommand</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubAsyncCommand`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubAsyncCommand`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubAsyncCommand`2.OnAfterExecuteAsync(System.Exception)">
            <summary>Sets the stub of AsyncCommand`2.OnAfterExecuteAsync(Exception exception)</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubAsyncCommand`2.OnAfterExecuteAsyncException">
            <summary>Sets the stub of AsyncCommand`2.OnAfterExecuteAsync(Exception exception)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubAsyncCommand`2.OnAuthoriseAsync">
            <summary>Sets the stub of AsyncCommand`2.OnAuthoriseAsync()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubAsyncCommand`2.OnAuthoriseAsync01">
            <summary>Sets the stub of AsyncCommand`2.OnAuthoriseAsync()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubAsyncCommand`2.OnBeforeExecuteAsync">
            <summary>Sets the stub of AsyncCommand`2.OnBeforeExecuteAsync()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubAsyncCommand`2.OnBeforeExecuteAsync01">
            <summary>Sets the stub of AsyncCommand`2.OnBeforeExecuteAsync()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubAsyncCommand`2.OnBeforeInitialiseTargetAsync">
            <summary>Sets the stub of AsyncCommand`2.OnBeforeInitialiseTargetAsync()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubAsyncCommand`2.OnBeforeInitialiseTargetAsync01">
            <summary>Sets the stub of AsyncCommand`2.OnBeforeInitialiseTargetAsync()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubAsyncCommand`2.OnExecuteAsync">
            <summary>Sets the stub of AsyncCommand`2.OnExecuteAsync()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubAsyncCommand`2.OnExecuteAsync01">
            <summary>Sets the stub of AsyncCommand`2.OnExecuteAsync()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubAsyncCommand`2.OnInitialiseTargetAsync">
            <summary>Sets the stub of AsyncCommand`2.OnInitialiseTargetAsync()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubAsyncCommand`2.OnInitialiseTargetAsync01">
            <summary>Sets the stub of AsyncCommand`2.OnInitialiseTargetAsync()</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.StubCommand`2">
            <summary>Stub type of Sfa.Core.Data.Command`2</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubCommand`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubCommand`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubCommand`2.Execute">
            <summary>Sets the stub of Command`2.Execute()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubCommand`2.Execute01">
            <summary>Sets the stub of Command`2.Execute()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubCommand`2.InitializeStub">
            <summary>Initializes a new instance of type StubCommand</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubCommand`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubCommand`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubCommand`2.OnAfterExecute(System.Exception)">
            <summary>Sets the stub of Command`2.OnAfterExecute(Exception exception)</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubCommand`2.OnAfterExecuteException">
            <summary>Sets the stub of Command`2.OnAfterExecute(Exception exception)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubCommand`2.OnAuthorise">
            <summary>Sets the stub of Command`2.OnAuthorise()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubCommand`2.OnAuthorise01">
            <summary>Sets the stub of Command`2.OnAuthorise()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubCommand`2.OnBeforeExecute">
            <summary>Sets the stub of Command`2.OnBeforeExecute()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubCommand`2.OnBeforeExecute01">
            <summary>Sets the stub of Command`2.OnBeforeExecute()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubCommand`2.OnBeforeInitialiseTarget">
            <summary>Sets the stub of Command`2.OnBeforeInitialiseTarget()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubCommand`2.OnBeforeInitialiseTarget01">
            <summary>Sets the stub of Command`2.OnBeforeInitialiseTarget()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubCommand`2.OnExecute">
            <summary>Sets the stub of Command`2.OnExecute()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubCommand`2.OnExecute01">
            <summary>Sets the stub of Command`2.OnExecute()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubCommand`2.OnInitialiseTarget">
            <summary>Sets the stub of Command`2.OnInitialiseTarget()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubCommand`2.OnInitialiseTarget01">
            <summary>Sets the stub of Command`2.OnInitialiseTarget()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubCommand`2.PropertiesToIgnoreForToString">
            <summary>Sets the stub of Command`2.get_PropertiesToIgnoreForToString()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubCommand`2.PropertiesToIgnoreForToStringGet">
            <summary>Sets the stub of Command`2.get_PropertiesToIgnoreForToString()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubCommand`2.ToString">
            <summary>Sets the stub of Command`2.ToString()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubCommand`2.ToString01">
            <summary>Sets the stub of Command`2.ToString()</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.StubIAsyncCommand">
            <summary>Stub type of Sfa.Core.Data.IAsyncCommand</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIAsyncCommand.#ctor">
            <summary>Initializes a new instance of type StubIAsyncCommand</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIAsyncCommand.AuthoriseAsync">
            <summary>Sets the stub of IAsyncCommand.AuthoriseAsync()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIAsyncCommand.ExecuteAsync">
            <summary>Sets the stub of IAsyncCommand.ExecuteAsync()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIAsyncCommand.Sfa#Core#Data#IAsyncCommand#AuthoriseAsync">
            <summary>Sets the stub of IAsyncCommand.AuthoriseAsync()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIAsyncCommand.Sfa#Core#Data#IAsyncCommand#ExecuteAsync">
            <summary>Sets the stub of IAsyncCommand.ExecuteAsync()</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.StubIAsyncRepository">
            <summary>Stub type of Sfa.Core.Data.IAsyncRepository</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIAsyncRepository.#ctor">
            <summary>Initializes a new instance of type StubIAsyncRepository</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIAsyncRepository.ClearAsync">
            <summary>Sets the stub of IAsyncRepository.ClearAsync()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIAsyncRepository.CreateAsyncOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Threading.Tasks.Task{``0}})">
            <summary>Sets stubs of CreateAsync(!!0 toSave)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIAsyncRepository.DeleteAsyncOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Threading.Tasks.Task{``0}})">
            <summary>Sets stubs of DeleteAsync(!!0 entity)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIAsyncRepository.GetQueryableOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0}})">
            <summary>Sets stubs of GetQueryable()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIAsyncRepository.LoadAsyncOf2M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``1,System.Threading.Tasks.Task{``0}})">
            <summary>Sets stubs of LoadAsync(!!1 id)</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIAsyncRepository.SaveChangesAsync">
            <summary>Sets the stub of IAsyncRepository.SaveChangesAsync()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIAsyncRepository.Sfa#Core#Data#IAsyncRepository#ClearAsync">
            <summary>Sets the stub of IAsyncRepository.ClearAsync()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIAsyncRepository.Sfa#Core#Data#IAsyncRepository#CreateAsync``1(``0)">
            <summary>Sets the stub of IAsyncRepository.CreateAsync(!!0 toSave)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIAsyncRepository.Sfa#Core#Data#IAsyncRepository#DeleteAsync``1(``0)">
            <summary>Sets the stub of IAsyncRepository.DeleteAsync(!!0 entity)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIAsyncRepository.Sfa#Core#Data#IAsyncRepository#GetQueryable``1">
            <summary>Sets the stub of IAsyncRepository.GetQueryable()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIAsyncRepository.Sfa#Core#Data#IAsyncRepository#LoadAsync``2(``1)">
            <summary>Sets the stub of IAsyncRepository.LoadAsync(!!1 id)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIAsyncRepository.Sfa#Core#Data#IAsyncRepository#SaveChangesAsync">
            <summary>Sets the stub of IAsyncRepository.SaveChangesAsync()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIAsyncRepository.Sfa#Core#Data#IAsyncRepository#UpdateAsync``1(``0)">
            <summary>Sets the stub of IAsyncRepository.UpdateAsync(!!0 entity)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIAsyncRepository.UpdateAsyncOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Threading.Tasks.Task{``0}})">
            <summary>Sets stubs of UpdateAsync(!!0 entity)</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.StubICommand">
            <summary>Stub type of Sfa.Core.Data.ICommand</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubICommand.#ctor">
            <summary>Initializes a new instance of type StubICommand</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubICommand.Authorise">
            <summary>Sets the stub of ICommand.Authorise()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubICommand.Execute">
            <summary>Sets the stub of ICommand.Execute()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubICommand.Sfa#Core#Data#ICommand#Authorise">
            <summary>Sets the stub of ICommand.Authorise()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubICommand.Sfa#Core#Data#ICommand#Execute">
            <summary>Sets the stub of ICommand.Execute()</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.StubIIdCommand`1">
            <summary>Stub type of Sfa.Core.Data.IIdCommand`1</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIIdCommand`1.#ctor">
            <summary>Initializes a new instance of type StubIIdCommand</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIIdCommand`1.AttachBackingFieldToId">
            <summary>Attaches delegates to emulate StubIIdCommand.Id as a property with a backing field.</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIIdCommand`1.Authorise">
            <summary>Sets the stub of ICommand.Authorise()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIIdCommand`1.Execute">
            <summary>Sets the stub of ICommand.Execute()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubIIdCommand`1.Sfa#Core#Data#IIdCommand{TId}#Id">
            <summary>Sets the stub of IIdCommand`1.get_Id()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIIdCommand`1.IdGet">
            <summary>Sets the stub of IIdCommand`1.get_Id()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIIdCommand`1.IdSetT0">
            <summary>Sets the stub of IIdCommand`1.set_Id(!0 value)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIIdCommand`1.Sfa#Core#Data#ICommand#Authorise">
            <summary>Sets the stub of ICommand.Authorise()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIIdCommand`1.Sfa#Core#Data#ICommand#Execute">
            <summary>Sets the stub of ICommand.Execute()</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.StubIMaxEntityId">
            <summary>Stub type of Sfa.Core.Data.IMaxEntityId</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIMaxEntityId.#ctor">
            <summary>Initializes a new instance of type StubIMaxEntityId</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIMaxEntityId.GetMaxIdOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``1})">
            <summary>Sets stubs of GetMaxId()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIMaxEntityId.Sfa#Core#Data#IMaxEntityId#GetMaxId``2">
            <summary>Sets the stub of IMaxEntityId.GetMaxId()</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.StubIProjection">
            <summary>Stub type of Sfa.Core.Data.IProjection</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIProjection.#ctor">
            <summary>Initializes a new instance of type StubIProjection</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.StubIQuery`1">
            <summary>Stub type of Sfa.Core.Data.IQuery`1</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIQuery`1.#ctor">
            <summary>Initializes a new instance of type StubIQuery</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIQuery`1.GetCount">
            <summary>Sets the stub of IQuery`1.GetCount()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIQuery`1.GetExists">
            <summary>Sets the stub of IQuery`1.GetExists()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIQuery`1.GetList">
            <summary>Sets the stub of IQuery`1.GetList()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIQuery`1.GetResultListInt32Int32">
            <summary>Sets the stub of IQuery`1.GetResultList(Int32 pageNumber, Int32 pageSize)</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIQuery`1.GetSingle">
            <summary>Sets the stub of IQuery`1.GetSingle()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIQuery`1.GetSingleIfExists">
            <summary>Sets the stub of IQuery`1.GetSingleIfExists()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIQuery`1.GetUnderlyingQuery">
            <summary>Sets the stub of IQuery`1.GetUnderlyingQuery()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIQuery`1.Sfa#Core#Data#IQuery{T}#GetCount">
            <summary>Sets the stub of IQuery`1.GetCount()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIQuery`1.Sfa#Core#Data#IQuery{T}#GetExists">
            <summary>Sets the stub of IQuery`1.GetExists()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIQuery`1.Sfa#Core#Data#IQuery{T}#GetList">
            <summary>Sets the stub of IQuery`1.GetList()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIQuery`1.Sfa#Core#Data#IQuery{T}#GetResultList(System.Int32,System.Int32)">
            <summary>Sets the stub of IQuery`1.GetResultList(Int32 pageNumber, Int32 pageSize)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIQuery`1.Sfa#Core#Data#IQuery{T}#GetSingle">
            <summary>Sets the stub of IQuery`1.GetSingle()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIQuery`1.Sfa#Core#Data#IQuery{T}#GetSingleIfExists">
            <summary>Sets the stub of IQuery`1.GetSingleIfExists()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIQuery`1.Sfa#Core#Data#IQuery{T}#GetUnderlyingQuery">
            <summary>Sets the stub of IQuery`1.GetUnderlyingQuery()</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.StubIReadOnlyRepository">
            <summary>Stub type of Sfa.Core.Data.IReadOnlyRepository</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIReadOnlyRepository.#ctor">
            <summary>Initializes a new instance of type StubIReadOnlyRepository</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIReadOnlyRepository.GetQueryableOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0}})">
            <summary>Sets stubs of GetQueryable()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIReadOnlyRepository.LoadOf2M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``1,``0})">
            <summary>Sets stubs of Load(!!1 id)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIReadOnlyRepository.Sfa#Core#Data#IReadOnlyRepository#GetQueryable``1">
            <summary>Sets the stub of IReadOnlyRepository.GetQueryable()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIReadOnlyRepository.Sfa#Core#Data#IReadOnlyRepository#Load``2(``1)">
            <summary>Sets the stub of IReadOnlyRepository.Load(!!1 id)</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.StubIRepository">
            <summary>Stub type of Sfa.Core.Data.IRepository</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIRepository.#ctor">
            <summary>Initializes a new instance of type StubIRepository</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIRepository.Clear">
            <summary>Sets the stub of IRepository.Clear()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIRepository.CreateOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0})">
            <summary>Sets stubs of Create(!!0 toSave)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIRepository.DeleteOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0})">
            <summary>Sets stubs of Delete(!!0 entity)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIRepository.GetQueryableOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0}})">
            <summary>Sets stubs of GetQueryable()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIRepository.LoadOf2M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``1,``0})">
            <summary>Sets stubs of Load(!!1 id)</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIRepository.SaveChanges">
            <summary>Sets the stub of IRepository.SaveChanges()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIRepository.Sfa#Core#Data#IRepository#Clear">
            <summary>Sets the stub of IRepository.Clear()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIRepository.Sfa#Core#Data#IRepository#Create``1(``0)">
            <summary>Sets the stub of IRepository.Create(!!0 toSave)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIRepository.Sfa#Core#Data#IRepository#Delete``1(``0)">
            <summary>Sets the stub of IRepository.Delete(!!0 entity)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIRepository.Sfa#Core#Data#IRepository#GetQueryable``1">
            <summary>Sets the stub of IRepository.GetQueryable()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIRepository.Sfa#Core#Data#IRepository#Load``2(``1)">
            <summary>Sets the stub of IRepository.Load(!!1 id)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIRepository.Sfa#Core#Data#IRepository#SaveChanges">
            <summary>Sets the stub of IRepository.SaveChanges()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIRepository.Sfa#Core#Data#IRepository#Update``1(``0)">
            <summary>Sets the stub of IRepository.Update(!!0 entity)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIRepository.UpdateOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0})">
            <summary>Sets stubs of Update(!!0 entity)</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.StubIResultList">
            <summary>Stub type of Sfa.Core.Data.IResultList</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIResultList.#ctor">
            <summary>Initializes a new instance of type StubIResultList</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubIResultList.Sfa#Core#Data#IResultList#CurrentPage">
            <summary>Sets the stub of IResultList.get_CurrentPage()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIResultList.CurrentPageGet">
            <summary>Sets the stub of IResultList.get_CurrentPage()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubIResultList.Sfa#Core#Data#IResultList#IsPopulated">
            <summary>Sets the stub of IResultList.get_IsPopulated()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIResultList.IsPopulatedGet">
            <summary>Sets the stub of IResultList.get_IsPopulated()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubIResultList.Sfa#Core#Data#IResultList#IsTruncated">
            <summary>Sets the stub of IResultList.get_IsTruncated()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIResultList.IsTruncatedGet">
            <summary>Sets the stub of IResultList.get_IsTruncated()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubIResultList.Sfa#Core#Data#IResultList#PageSize">
            <summary>Sets the stub of IResultList.get_PageSize()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIResultList.PageSizeGet">
            <summary>Sets the stub of IResultList.get_PageSize()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubIResultList.Sfa#Core#Data#IResultList#TotalNumberOfPages">
            <summary>Sets the stub of IResultList.get_TotalNumberOfPages()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIResultList.TotalNumberOfPagesGet">
            <summary>Sets the stub of IResultList.get_TotalNumberOfPages()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubIResultList.Sfa#Core#Data#IResultList#TotalNumberOfRecords">
            <summary>Sets the stub of IResultList.get_TotalNumberOfRecords()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIResultList.TotalNumberOfRecordsGet">
            <summary>Sets the stub of IResultList.get_TotalNumberOfRecords()</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.StubIResultList`1">
            <summary>Stub type of Sfa.Core.Data.IResultList`1</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIResultList`1.#ctor">
            <summary>Initializes a new instance of type StubIResultList</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubIResultList`1.Sfa#Core#Data#IResultList#CurrentPage">
            <summary>Sets the stub of IResultList.get_CurrentPage()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIResultList`1.CurrentPageGet">
            <summary>Sets the stub of IResultList.get_CurrentPage()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIResultList`1.GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIResultList`1.GetEnumerator01">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubIResultList`1.Sfa#Core#Data#IResultList#IsPopulated">
            <summary>Sets the stub of IResultList.get_IsPopulated()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIResultList`1.IsPopulatedGet">
            <summary>Sets the stub of IResultList.get_IsPopulated()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubIResultList`1.Sfa#Core#Data#IResultList#IsTruncated">
            <summary>Sets the stub of IResultList.get_IsTruncated()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIResultList`1.IsTruncatedGet">
            <summary>Sets the stub of IResultList.get_IsTruncated()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubIResultList`1.Sfa#Core#Data#IResultList#PageSize">
            <summary>Sets the stub of IResultList.get_PageSize()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIResultList`1.PageSizeGet">
            <summary>Sets the stub of IResultList.get_PageSize()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIResultList`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubIResultList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubIResultList`1.Sfa#Core#Data#IResultList#TotalNumberOfPages">
            <summary>Sets the stub of IResultList.get_TotalNumberOfPages()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIResultList`1.TotalNumberOfPagesGet">
            <summary>Sets the stub of IResultList.get_TotalNumberOfPages()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubIResultList`1.Sfa#Core#Data#IResultList#TotalNumberOfRecords">
            <summary>Sets the stub of IResultList.get_TotalNumberOfRecords()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubIResultList`1.TotalNumberOfRecordsGet">
            <summary>Sets the stub of IResultList.get_TotalNumberOfRecords()</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.StubITransactional">
            <summary>Stub type of Sfa.Core.Data.ITransactional</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubITransactional.#ctor">
            <summary>Initializes a new instance of type StubITransactional</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubITransactional.BeginTransaction">
            <summary>Sets the stub of ITransactional.BeginTransaction()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubITransactional.CommitTransaction">
            <summary>Sets the stub of ITransactional.CommitTransaction()</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubITransactional.Sfa#Core#Data#ITransactional#HasCurrenTransaction">
            <summary>Sets the stub of ITransactional.get_HasCurrenTransaction()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubITransactional.HasCurrenTransactionGet">
            <summary>Sets the stub of ITransactional.get_HasCurrenTransaction()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubITransactional.RollbackTransaction">
            <summary>Sets the stub of ITransactional.RollbackTransaction()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubITransactional.Sfa#Core#Data#ITransactional#BeginTransaction">
            <summary>Sets the stub of ITransactional.BeginTransaction()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubITransactional.Sfa#Core#Data#ITransactional#CommitTransaction">
            <summary>Sets the stub of ITransactional.CommitTransaction()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubITransactional.Sfa#Core#Data#ITransactional#RollbackTransaction">
            <summary>Sets the stub of ITransactional.RollbackTransaction()</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.StubQuery`2">
            <summary>Stub type of Sfa.Core.Data.Query`2</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubQuery`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubQuery`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubQuery`2.CreateGetListQuery(System.Linq.IQueryable{`1})">
            <summary>Sets the stub of Query`2.CreateGetListQuery(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubQuery`2.CreateGetListQueryIQueryableOfT1">
            <summary>Sets the stub of Query`2.CreateGetListQuery(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubQuery`2.ExecuteGetList(System.Linq.IQueryable{`1})">
            <summary>Sets the stub of Query`2.ExecuteGetList(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubQuery`2.ExecuteGetListIQueryableOfT1">
            <summary>Sets the stub of Query`2.ExecuteGetList(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubQuery`2.ExecuteGetListSize(System.Linq.IQueryable{`1})">
            <summary>Sets the stub of Query`2.ExecuteGetListSize(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubQuery`2.ExecuteGetListSizeIQueryableOfT1">
            <summary>Sets the stub of Query`2.ExecuteGetListSize(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubQuery`2.ExecuteGetListSum(System.Linq.IQueryable{`1})">
            <summary>Sets the stub of Query`2.ExecuteGetListSum(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubQuery`2.ExecuteGetListSumIQueryableOfT1">
            <summary>Sets the stub of Query`2.ExecuteGetListSum(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubQuery`2.ExecuteResultList(System.Linq.IQueryable{`1})">
            <summary>Sets the stub of Query`2.ExecuteResultList(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubQuery`2.ExecuteResultListIQueryableOfT1">
            <summary>Sets the stub of Query`2.ExecuteResultList(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubQuery`2.FormLinqQuery(System.Linq.IQueryable{`1})">
            <summary>Sets the stub of Query`2.FormLinqQuery(IQueryable`1&lt;!1&gt; query)</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubQuery`2.FormLinqQueryIQueryableOfT1">
            <summary>Sets the stub of Query`2.FormLinqQuery(IQueryable`1&lt;!1&gt; query)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubQuery`2.GetAnyItemsExist">
            <summary>Sets the stub of Query`2.GetAnyItemsExist()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubQuery`2.GetAnyItemsExist01">
            <summary>Sets the stub of Query`2.GetAnyItemsExist()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubQuery`2.GetExistsAsync">
            <summary>Sets the stub of Query`2.GetExistsAsync()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubQuery`2.GetExistsAsync01">
            <summary>Sets the stub of Query`2.GetExistsAsync()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubQuery`2.GetList">
            <summary>Sets the stub of Query`2.GetList()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubQuery`2.GetList01">
            <summary>Sets the stub of Query`2.GetList()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubQuery`2.GetResultList(System.Int32,System.Int32)">
            <summary>Sets the stub of Query`2.GetResultList(Int32 pageNumber, Int32 pageSize)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubQuery`2.GetResultList(System.Linq.IQueryable{`1})">
            <summary>Sets the stub of Query`2.GetResultList(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubQuery`2.GetResultListIQueryableOfT1">
            <summary>Sets the stub of Query`2.GetResultList(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubQuery`2.GetResultListInt32Int32">
            <summary>Sets the stub of Query`2.GetResultList(Int32 pageNumber, Int32 pageSize)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubQuery`2.GetResultListSize(System.Linq.IQueryable{`1})">
            <summary>Sets the stub of Query`2.GetResultListSize(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubQuery`2.GetResultListSizeIQueryableOfT1">
            <summary>Sets the stub of Query`2.GetResultListSize(IQueryable`1&lt;!1&gt; queryable)</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubQuery`2.GetSingle">
            <summary>Sets the stub of Query`2.GetSingle()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubQuery`2.GetSingle01">
            <summary>Sets the stub of Query`2.GetSingle()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubQuery`2.GetSingleIfExists">
            <summary>Sets the stub of Query`2.GetSingleIfExists()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubQuery`2.GetSingleIfExists01">
            <summary>Sets the stub of Query`2.GetSingleIfExists()</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubQuery`2.InitializeStub">
            <summary>Initializes a new instance of type StubQuery</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubQuery`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubQuery`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubQuery`2.Queryable">
            <summary>Sets the stub of Query`2.get_Queryable()</summary>
        </member>
        <member name="F:Sfa.Core.Data.Fakes.StubQuery`2.QueryableGet">
            <summary>Sets the stub of Query`2.get_Queryable()</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.StubQueryableMapper">
            <summary>Stub type of Sfa.Core.Data.QueryableMapper</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubQueryableMapper.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubQueryableMapper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubQueryableMapper.InitializeStub">
            <summary>Initializes a new instance of type StubQueryableMapper</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubQueryableMapper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubQueryableMapper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Sfa.Core.Data.Fakes.StubResultList`1">
            <summary>Stub type of Sfa.Core.Data.ResultList`1</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubResultList`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubResultList`1.#ctor(`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubResultList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubResultList`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubResultList`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Boolean,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubResultList`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubResultList`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Sfa.Core.Data.Fakes.StubResultList`1.InitializeStub">
            <summary>Initializes a new instance of type StubResultList</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubResultList`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Data.Fakes.StubResultList`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Sfa.Core.Diagnostics.Fakes.ShimDebugTextWriter">
            <summary>Shim type of Sfa.Core.Diagnostics.DebugTextWriter</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.ShimDebugTextWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.ShimDebugTextWriter.#ctor(Sfa.Core.Diagnostics.DebugTextWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Diagnostics.Fakes.ShimDebugTextWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Sfa.Core.Diagnostics.Fakes.ShimDebugTextWriter.AllInstances.EncodingGet">
            <summary>Sets the shim of DebugTextWriter.get_Encoding()</summary>
        </member>
        <member name="P:Sfa.Core.Diagnostics.Fakes.ShimDebugTextWriter.AllInstances.WriteCharArrayInt32Int32">
            <summary>Sets the shim of DebugTextWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:Sfa.Core.Diagnostics.Fakes.ShimDebugTextWriter.AllInstances.WriteString">
            <summary>Sets the shim of DebugTextWriter.Write(String value)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.ShimDebugTextWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.ShimDebugTextWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Diagnostics.Fakes.ShimDebugTextWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.ShimDebugTextWriter.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Sfa.Core.Diagnostics.Fakes.ShimDebugTextWriter.Constructor">
            <summary>Sets the shim of DebugTextWriter.DebugTextWriter()</summary>
        </member>
        <member name="P:Sfa.Core.Diagnostics.Fakes.ShimDebugTextWriter.EncodingGet">
            <summary>Sets the shim of DebugTextWriter.get_Encoding()</summary>
        </member>
        <member name="P:Sfa.Core.Diagnostics.Fakes.ShimDebugTextWriter.WriteCharArrayInt32Int32">
            <summary>Sets the shim of DebugTextWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:Sfa.Core.Diagnostics.Fakes.ShimDebugTextWriter.WriteString">
            <summary>Sets the shim of DebugTextWriter.Write(String value)</summary>
        </member>
        <member name="T:Sfa.Core.Diagnostics.Fakes.ShimHealthCheck">
            <summary>Shim type of Sfa.Core.Diagnostics.HealthCheck</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.ShimHealthCheck.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.ShimHealthCheck.#ctor(Sfa.Core.Diagnostics.HealthCheck)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Diagnostics.Fakes.ShimHealthCheck.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Sfa.Core.Diagnostics.Fakes.ShimHealthCheck.AllInstances.AllPAssedGet">
            <summary>Sets the shim of HealthCheck.get_AllPAssed()</summary>
        </member>
        <member name="P:Sfa.Core.Diagnostics.Fakes.ShimHealthCheck.AllInstances.RunHealthCheckServiceTestStringStringString">
            <summary>Sets the shim of HealthCheck.RunHealthCheckServiceTest(String baseUri, String serviceHealthCheckPath, String name)</summary>
        </member>
        <member name="P:Sfa.Core.Diagnostics.Fakes.ShimHealthCheck.AllInstances.RunTestActionString">
            <summary>Sets the shim of HealthCheck.RunTest(Action test, String name)</summary>
        </member>
        <member name="P:Sfa.Core.Diagnostics.Fakes.ShimHealthCheck.AllPAssedGet">
            <summary>Sets the shim of HealthCheck.get_AllPAssed()</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.ShimHealthCheck.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.ShimHealthCheck.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Diagnostics.Fakes.ShimHealthCheck.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Diagnostics.Fakes.ShimHealthCheck.Constructor">
            <summary>Sets the shim of HealthCheck.HealthCheck()</summary>
        </member>
        <member name="P:Sfa.Core.Diagnostics.Fakes.ShimHealthCheck.RunHealthCheckServiceTestStringStringString">
            <summary>Sets the shim of HealthCheck.RunHealthCheckServiceTest(String baseUri, String serviceHealthCheckPath, String name)</summary>
        </member>
        <member name="P:Sfa.Core.Diagnostics.Fakes.ShimHealthCheck.RunTestActionString">
            <summary>Sets the shim of HealthCheck.RunTest(Action test, String name)</summary>
        </member>
        <member name="T:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter">
            <summary>Stub type of Sfa.Core.Diagnostics.DebugTextWriter</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.AttachBackingFieldToNewLine">
            <summary>Attaches delegates to emulate StubDebugTextWriter.NewLine as a property with a backing field.</summary>
        </member>
        <member name="P:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.Close">
            <summary>Sets the stub of TextWriter.Close()</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.Close01">
            <summary>Sets the stub of TextWriter.Close()</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.Dispose(System.Boolean)">
            <summary>Sets the stub of TextWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.DisposeBoolean">
            <summary>Sets the stub of TextWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.Encoding">
            <summary>Sets the stub of DebugTextWriter.get_Encoding()</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.EncodingGet">
            <summary>Sets the stub of DebugTextWriter.get_Encoding()</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.Flush">
            <summary>Sets the stub of TextWriter.Flush()</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.Flush01">
            <summary>Sets the stub of TextWriter.Flush()</summary>
        </member>
        <member name="P:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.FormatProvider">
            <summary>Sets the stub of TextWriter.get_FormatProvider()</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.FormatProviderGet">
            <summary>Sets the stub of TextWriter.get_FormatProvider()</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.InitializeStub">
            <summary>Initializes a new instance of type StubDebugTextWriter</summary>
        </member>
        <member name="P:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.NewLine">
            <summary>Sets the stub of TextWriter.get_NewLine()</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.NewLineGet">
            <summary>Sets the stub of TextWriter.get_NewLine()</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.NewLineSetString">
            <summary>Sets the stub of TextWriter.set_NewLine(String value)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.Write(System.Boolean)">
            <summary>Sets the stub of TextWriter.Write(Boolean value)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.Write(System.Char)">
            <summary>Sets the stub of TextWriter.Write(Char value)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.Write(System.Decimal)">
            <summary>Sets the stub of TextWriter.Write(Decimal value)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.Write(System.Double)">
            <summary>Sets the stub of TextWriter.Write(Double value)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.Write(System.Object)">
            <summary>Sets the stub of TextWriter.Write(Object value)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.Write(System.String)">
            <summary>Sets the stub of DebugTextWriter.Write(String value)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.Write(System.Int32)">
            <summary>Sets the stub of TextWriter.Write(Int32 value)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.Write(System.Int64)">
            <summary>Sets the stub of TextWriter.Write(Int64 value)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.Write(System.Single)">
            <summary>Sets the stub of TextWriter.Write(Single value)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.Write(System.UInt32)">
            <summary>Sets the stub of TextWriter.Write(UInt32 value)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.Write(System.Char[])">
            <summary>Sets the stub of TextWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.Write(System.UInt64)">
            <summary>Sets the stub of TextWriter.Write(UInt64 value)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.Write(System.String,System.Object[])">
            <summary>Sets the stub of TextWriter.Write(String format, Object[] arg)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.Write(System.String,System.Object)">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.Write(System.String,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of DebugTextWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.Write(System.String,System.Object,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteBoolean">
            <summary>Sets the stub of TextWriter.Write(Boolean value)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteChar">
            <summary>Sets the stub of TextWriter.Write(Char value)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteCharArray">
            <summary>Sets the stub of TextWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteCharArrayInt32Int32">
            <summary>Sets the stub of DebugTextWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteDecimal">
            <summary>Sets the stub of TextWriter.Write(Decimal value)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteDouble">
            <summary>Sets the stub of TextWriter.Write(Double value)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteInt32">
            <summary>Sets the stub of TextWriter.Write(Int32 value)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteInt64">
            <summary>Sets the stub of TextWriter.Write(Int64 value)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLine">
            <summary>Sets the stub of TextWriter.WriteLine()</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLine(System.Boolean)">
            <summary>Sets the stub of TextWriter.WriteLine(Boolean value)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLine(System.Char)">
            <summary>Sets the stub of TextWriter.WriteLine(Char value)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLine(System.String)">
            <summary>Sets the stub of TextWriter.WriteLine(String value)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLine(System.Decimal)">
            <summary>Sets the stub of TextWriter.WriteLine(Decimal value)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLine(System.Double)">
            <summary>Sets the stub of TextWriter.WriteLine(Double value)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLine(System.Int32)">
            <summary>Sets the stub of TextWriter.WriteLine(Int32 value)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLine(System.Int64)">
            <summary>Sets the stub of TextWriter.WriteLine(Int64 value)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLine(System.Single)">
            <summary>Sets the stub of TextWriter.WriteLine(Single value)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLine(System.UInt32)">
            <summary>Sets the stub of TextWriter.WriteLine(UInt32 value)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLine(System.UInt64)">
            <summary>Sets the stub of TextWriter.WriteLine(UInt64 value)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLine(System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(Object value)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLine(System.Char[])">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLine(System.String,System.Object[])">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object[] arg)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLine(System.String,System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLine(System.String,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLine01">
            <summary>Sets the stub of TextWriter.WriteLine()</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLineBoolean">
            <summary>Sets the stub of TextWriter.WriteLine(Boolean value)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLineChar">
            <summary>Sets the stub of TextWriter.WriteLine(Char value)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLineCharArray">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLineCharArrayInt32Int32">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLineDecimal">
            <summary>Sets the stub of TextWriter.WriteLine(Decimal value)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLineDouble">
            <summary>Sets the stub of TextWriter.WriteLine(Double value)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLineInt32">
            <summary>Sets the stub of TextWriter.WriteLine(Int32 value)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLineInt64">
            <summary>Sets the stub of TextWriter.WriteLine(Int64 value)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLineObject">
            <summary>Sets the stub of TextWriter.WriteLine(Object value)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLineSingle">
            <summary>Sets the stub of TextWriter.WriteLine(Single value)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLineString">
            <summary>Sets the stub of TextWriter.WriteLine(String value)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLineStringObject">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLineStringObjectArray">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object[] arg)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLineStringObjectObject">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLineStringObjectObjectObject">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLineUInt32">
            <summary>Sets the stub of TextWriter.WriteLine(UInt32 value)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteLineUInt64">
            <summary>Sets the stub of TextWriter.WriteLine(UInt64 value)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteObject">
            <summary>Sets the stub of TextWriter.Write(Object value)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteSingle">
            <summary>Sets the stub of TextWriter.Write(Single value)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteString">
            <summary>Sets the stub of DebugTextWriter.Write(String value)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteStringObject">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteStringObjectArray">
            <summary>Sets the stub of TextWriter.Write(String format, Object[] arg)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteStringObjectObject">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteStringObjectObjectObject">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteUInt32">
            <summary>Sets the stub of TextWriter.Write(UInt32 value)</summary>
        </member>
        <member name="F:Sfa.Core.Diagnostics.Fakes.StubDebugTextWriter.WriteUInt64">
            <summary>Sets the stub of TextWriter.Write(UInt64 value)</summary>
        </member>
        <member name="T:Sfa.Core.Diagnostics.Fakes.StubHealthCheck">
            <summary>Stub type of Sfa.Core.Diagnostics.HealthCheck</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubHealthCheck.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Diagnostics.Fakes.StubHealthCheck.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Sfa.Core.Diagnostics.Fakes.StubHealthCheck.InitializeStub">
            <summary>Initializes a new instance of type StubHealthCheck</summary>
        </member>
        <member name="P:Sfa.Core.Diagnostics.Fakes.StubHealthCheck.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Diagnostics.Fakes.StubHealthCheck.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Sfa.Core.Entities.Fakes.StubIEntity">
            <summary>Stub type of Sfa.Core.Entities.IEntity</summary>
        </member>
        <member name="M:Sfa.Core.Entities.Fakes.StubIEntity.#ctor">
            <summary>Initializes a new instance of type StubIEntity</summary>
        </member>
        <member name="T:Sfa.Core.Entities.Fakes.StubIEntity`1">
            <summary>Stub type of Sfa.Core.Entities.IEntity`1</summary>
        </member>
        <member name="M:Sfa.Core.Entities.Fakes.StubIEntity`1.#ctor">
            <summary>Initializes a new instance of type StubIEntity</summary>
        </member>
        <member name="P:Sfa.Core.Entities.Fakes.StubIEntity`1.Sfa#Core#Entities#IEntity{T}#Id">
            <summary>Sets the stub of IEntity`1.get_Id()</summary>
        </member>
        <member name="F:Sfa.Core.Entities.Fakes.StubIEntity`1.IdGet">
            <summary>Sets the stub of IEntity`1.get_Id()</summary>
        </member>
        <member name="T:Sfa.Core.Environment.Fakes.ShimDataDictionaryHelper">
            <summary>Shim type of Sfa.Core.Environment.DataDictionaryHelper</summary>
        </member>
        <member name="M:Sfa.Core.Environment.Fakes.ShimDataDictionaryHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Environment.Fakes.ShimDataDictionaryHelper.#ctor(Sfa.Core.Environment.DataDictionaryHelper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Environment.Fakes.ShimDataDictionaryHelper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Sfa.Core.Environment.Fakes.ShimDataDictionaryHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Environment.Fakes.ShimDataDictionaryHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Environment.Fakes.ShimDataDictionaryHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Environment.Fakes.ShimDataDictionaryHelper.Constructor">
            <summary>Sets the shim of DataDictionaryHelper.DataDictionaryHelper()</summary>
        </member>
        <member name="P:Sfa.Core.Environment.Fakes.ShimDataDictionaryHelper.SetDataDictionaryLocationRelativeToAppSettingsString">
            <summary>Sets the shim of DataDictionaryHelper.SetDataDictionaryLocationRelativeToAppSettings(String appSettingKey)</summary>
        </member>
        <member name="T:Sfa.Core.Environment.Fakes.StubDataDictionaryHelper">
            <summary>Stub type of Sfa.Core.Environment.DataDictionaryHelper</summary>
        </member>
        <member name="M:Sfa.Core.Environment.Fakes.StubDataDictionaryHelper.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Environment.Fakes.StubDataDictionaryHelper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Sfa.Core.Environment.Fakes.StubDataDictionaryHelper.InitializeStub">
            <summary>Initializes a new instance of type StubDataDictionaryHelper</summary>
        </member>
        <member name="P:Sfa.Core.Environment.Fakes.StubDataDictionaryHelper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Environment.Fakes.StubDataDictionaryHelper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer">
            <summary>Shim type of Sfa.Core.Equality.FieldValueEqualityComparer</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.#ctor(Sfa.Core.Equality.FieldValueEqualityComparer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.AddFieldValueEqualityComparerIFieldValueEqualityComparer">
            <summary>Sets the shim of FieldValueEqualityComparer.AddFieldValueEqualityComparer(IFieldValueEqualityComparer comparer)</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.AddFieldValueTypeEqualityComparerIFieldValueTypeEqualityComparer">
            <summary>Sets the shim of FieldValueEqualityComparer.AddFieldValueTypeEqualityComparer(IFieldValueTypeEqualityComparer comparer)</summary>
        </member>
        <member name="T:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.AllInstances.EqualsObjectObject">
            <summary>Sets the shim of FieldValueEqualityComparer.Equals(Object x, Object y)</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.AllInstances.GetHashCodeObject">
            <summary>Sets the shim of FieldValueEqualityComparer.GetHashCode(Object obj)</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.AreEqualObjectObject">
            <summary>Sets the shim of FieldValueEqualityComparer.AreEqual(Object x, Object y)</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.AreObjectsDictionariesObjectObject">
            <summary>Sets the shim of FieldValueEqualityComparer.AreObjectsDictionaries(Object obj1, Object obj2)</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.AreObjectsEnumerablesObjectObject">
            <summary>Sets the shim of FieldValueEqualityComparer.AreObjectsEnumerables(Object obj1, Object obj2)</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.AreObjectsSameTypeObjectObject">
            <summary>Sets the shim of FieldValueEqualityComparer.AreObjectsSameType(Object obj1, Object obj2)</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.Bind(System.Collections.IEqualityComparer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.Constructor">
            <summary>Sets the shim of FieldValueEqualityComparer.FieldValueEqualityComparer()</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.EqualsObjectObject">
            <summary>Sets the shim of FieldValueEqualityComparer.Equals(Object x, Object y)</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.GetHashCodeObject">
            <summary>Sets the shim of FieldValueEqualityComparer.GetHashCode(Object obj)</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.IsSystemValueTypeType">
            <summary>Sets the shim of FieldValueEqualityComparer.IsSystemValueType(Type type)</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.LogFailedComparisonStringTypeObjectObject">
            <summary>Sets the shim of FieldValueEqualityComparer.LogFailedComparison(String fieldName, Type fieldType, Object value1, Object value2)</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.MatchesComparerObjectObjectIFieldValueEqualityComparerOut">
            <summary>Sets the shim of FieldValueEqualityComparer.MatchesComparer(Object lhs, Object rhs, IFieldValueEqualityComparer&amp; comparer)</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.MatchesComparerObjectRefObjectRefObjectObjectFieldInfoIFieldValueEqualityComparerOut">
            <summary>Sets the shim of FieldValueEqualityComparer.MatchesComparer(Object&amp; lhsField, Object&amp; rhsField, Object lhsParent, Object rhsParent, FieldInfo field, IFieldValueEqualityComparer&amp; comparer)</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.PerformBasicFieldComparisonObjectObject">
            <summary>Sets the shim of FieldValueEqualityComparer.PerformBasicFieldComparison(Object value1, Object value2)</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.PerformDateTimeFieldComparisonObjectObject">
            <summary>Sets the shim of FieldValueEqualityComparer.PerformDateTimeFieldComparison(Object value1, Object value2)</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.SetAssembliesWithTypesToUseValueSemanticsOnIListOfAssembly">
            <summary>Sets the shim of FieldValueEqualityComparer.SetAssembliesWithTypesToUseValueSemanticsOn(IList`1&lt;Assembly&gt; assemblies)</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.ShouldFieldHaveValueSemanticEqualityPerformedFieldInfo">
            <summary>Sets the shim of FieldValueEqualityComparer.ShouldFieldHaveValueSemanticEqualityPerformed(FieldInfo fieldInfo)</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.ShouldFieldHaveValueSemanticEqualityPerformedType">
            <summary>Sets the shim of FieldValueEqualityComparer.ShouldFieldHaveValueSemanticEqualityPerformed(Type typeToFind)</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimFieldValueEqualityComparer.StaticConstructor">
            <summary>Sets the shim of FieldValueEqualityComparer.FieldValueEqualityComparer()</summary>
        </member>
        <member name="T:Sfa.Core.Equality.Fakes.ShimNoValueCompareAttribute">
            <summary>Shim type of Sfa.Core.Equality.NoValueCompareAttribute</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.ShimNoValueCompareAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.ShimNoValueCompareAttribute.#ctor(Sfa.Core.Equality.NoValueCompareAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Equality.Fakes.ShimNoValueCompareAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.ShimNoValueCompareAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.ShimNoValueCompareAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimNoValueCompareAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimNoValueCompareAttribute.Constructor">
            <summary>Sets the shim of NoValueCompareAttribute.NoValueCompareAttribute()</summary>
        </member>
        <member name="T:Sfa.Core.Equality.Fakes.ShimReferenceEqualityComparer`1">
            <summary>Shim type of Sfa.Core.Equality.ReferenceEqualityComparer`1</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.ShimReferenceEqualityComparer`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.ShimReferenceEqualityComparer`1.#ctor(Sfa.Core.Equality.ReferenceEqualityComparer{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Equality.Fakes.ShimReferenceEqualityComparer`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimReferenceEqualityComparer`1.AllInstances.EqualsT0T0">
            <summary>Sets the shim of ReferenceEqualityComparer`1.Equals(!0 x, !0 y)</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimReferenceEqualityComparer`1.AllInstances.GetHashCodeT0">
            <summary>Sets the shim of ReferenceEqualityComparer`1.GetHashCode(!0 obj)</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.ShimReferenceEqualityComparer`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.ShimReferenceEqualityComparer`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimReferenceEqualityComparer`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.ShimReferenceEqualityComparer`1.Bind(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimReferenceEqualityComparer`1.Constructor">
            <summary>Sets the shim of ReferenceEqualityComparer`1.ReferenceEqualityComparer`1()</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimReferenceEqualityComparer`1.EqualsT0T0">
            <summary>Sets the shim of ReferenceEqualityComparer`1.Equals(!0 x, !0 y)</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.ShimReferenceEqualityComparer`1.GetHashCodeT0">
            <summary>Sets the shim of ReferenceEqualityComparer`1.GetHashCode(!0 obj)</summary>
        </member>
        <member name="T:Sfa.Core.Equality.Fakes.StubFieldValueEqualityComparer">
            <summary>Stub type of Sfa.Core.Equality.FieldValueEqualityComparer</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.StubFieldValueEqualityComparer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.StubFieldValueEqualityComparer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.StubFieldValueEqualityComparer.InitializeStub">
            <summary>Initializes a new instance of type StubFieldValueEqualityComparer</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.StubFieldValueEqualityComparer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.StubFieldValueEqualityComparer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Sfa.Core.Equality.Fakes.StubIFieldValueEqualityComparer">
            <summary>Stub type of Sfa.Core.Equality.IFieldValueEqualityComparer</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.StubIFieldValueEqualityComparer.#ctor">
            <summary>Initializes a new instance of type StubIFieldValueEqualityComparer</summary>
        </member>
        <member name="F:Sfa.Core.Equality.Fakes.StubIFieldValueEqualityComparer.CanCompareObjectObject">
            <summary>Sets the stub of IFieldValueEqualityComparer.CanCompare(Object lhs, Object rhs)</summary>
        </member>
        <member name="F:Sfa.Core.Equality.Fakes.StubIFieldValueEqualityComparer.CanCompareObjectRefObjectRefObjectObjectFieldInfo">
            <summary>Sets the stub of IFieldValueEqualityComparer.CanCompare(Object&amp; lhsField, Object&amp; rhsField, Object lhsParent, Object rhsParent, FieldInfo field)</summary>
        </member>
        <member name="F:Sfa.Core.Equality.Fakes.StubIFieldValueEqualityComparer.EqualsObjectObject">
            <summary>Sets the stub of IEqualityComparer.Equals(Object x, Object y)</summary>
        </member>
        <member name="F:Sfa.Core.Equality.Fakes.StubIFieldValueEqualityComparer.GetHashCodeObject">
            <summary>Sets the stub of IEqualityComparer.GetHashCode(Object obj)</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.StubIFieldValueEqualityComparer.Sfa#Core#Equality#IFieldValueEqualityComparer#CanCompare(System.Object,System.Object)">
            <summary>Sets the stub of IFieldValueEqualityComparer.CanCompare(Object lhs, Object rhs)</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.StubIFieldValueEqualityComparer.Sfa#Core#Equality#IFieldValueEqualityComparer#CanCompare(System.Object@,System.Object@,System.Object,System.Object,System.Reflection.FieldInfo)">
            <summary>Sets the stub of IFieldValueEqualityComparer.CanCompare(Object&amp; lhsField, Object&amp; rhsField, Object lhsParent, Object rhsParent, FieldInfo field)</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.StubIFieldValueEqualityComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
            <summary>Sets the stub of IEqualityComparer.Equals(Object x, Object y)</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.StubIFieldValueEqualityComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
            <summary>Sets the stub of IEqualityComparer.GetHashCode(Object obj)</summary>
        </member>
        <member name="T:Sfa.Core.Equality.Fakes.StubIFieldValueTypeEqualityComparer">
            <summary>Stub type of Sfa.Core.Equality.IFieldValueTypeEqualityComparer</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.StubIFieldValueTypeEqualityComparer.#ctor">
            <summary>Initializes a new instance of type StubIFieldValueTypeEqualityComparer</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.StubIFieldValueTypeEqualityComparer.Sfa#Core#Equality#IFieldValueTypeEqualityComparer#TreatAsSameType(System.Object,System.Object)">
            <summary>Sets the stub of IFieldValueTypeEqualityComparer.TreatAsSameType(Object lhs, Object rhs)</summary>
        </member>
        <member name="F:Sfa.Core.Equality.Fakes.StubIFieldValueTypeEqualityComparer.TreatAsSameTypeObjectObject">
            <summary>Sets the stub of IFieldValueTypeEqualityComparer.TreatAsSameType(Object lhs, Object rhs)</summary>
        </member>
        <member name="T:Sfa.Core.Equality.Fakes.StubNoValueCompareAttribute">
            <summary>Stub type of Sfa.Core.Equality.NoValueCompareAttribute</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.StubNoValueCompareAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.StubNoValueCompareAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.StubNoValueCompareAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Sfa.Core.Equality.Fakes.StubNoValueCompareAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.StubNoValueCompareAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Sfa.Core.Equality.Fakes.StubNoValueCompareAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.StubNoValueCompareAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubNoValueCompareAttribute</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.StubNoValueCompareAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.StubNoValueCompareAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.StubNoValueCompareAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Sfa.Core.Equality.Fakes.StubNoValueCompareAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.StubNoValueCompareAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Sfa.Core.Equality.Fakes.StubNoValueCompareAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.StubNoValueCompareAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:Sfa.Core.Equality.Fakes.StubNoValueCompareAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Sfa.Core.Equality.Fakes.StubReferenceEqualityComparer`1">
            <summary>Stub type of Sfa.Core.Equality.ReferenceEqualityComparer`1</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.StubReferenceEqualityComparer`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.StubReferenceEqualityComparer`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Sfa.Core.Equality.Fakes.StubReferenceEqualityComparer`1.InitializeStub">
            <summary>Initializes a new instance of type StubReferenceEqualityComparer</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.StubReferenceEqualityComparer`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Equality.Fakes.StubReferenceEqualityComparer`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Sfa.Core.Exceptions.Fakes.ShimBusinessLogicException">
            <summary>Shim type of Sfa.Core.Exceptions.BusinessLogicException</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.ShimBusinessLogicException.#ctor(Sfa.Core.Exceptions.BusinessLogicException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Exceptions.Fakes.ShimBusinessLogicException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.ShimBusinessLogicException.AllInstances.TreatAsCommitSuccessGet">
            <summary>Sets the shim of BusinessLogicException.get_TreatAsCommitSuccess()</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.ShimBusinessLogicException.AllInstances.TreatAsCommitSuccessSetBoolean">
            <summary>Sets the shim of BusinessLogicException.set_TreatAsCommitSuccess(Boolean value)</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.ShimBusinessLogicException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.ShimBusinessLogicException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.ShimBusinessLogicException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.ShimBusinessLogicException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.ShimBusinessLogicException.Constructor">
            <summary>Sets the shim of BusinessLogicException.BusinessLogicException()</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.ShimBusinessLogicException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of BusinessLogicException.BusinessLogicException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.ShimBusinessLogicException.ConstructorString">
            <summary>Sets the shim of BusinessLogicException.BusinessLogicException(String message)</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.ShimBusinessLogicException.ConstructorStringException">
            <summary>Sets the shim of BusinessLogicException.BusinessLogicException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.ShimBusinessLogicException.TreatAsCommitSuccessGet">
            <summary>Sets the shim of BusinessLogicException.get_TreatAsCommitSuccess()</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.ShimBusinessLogicException.TreatAsCommitSuccessSetBoolean">
            <summary>Sets the shim of BusinessLogicException.set_TreatAsCommitSuccess(Boolean value)</summary>
        </member>
        <member name="T:Sfa.Core.Exceptions.Fakes.ShimMissingEntityException">
            <summary>Shim type of Sfa.Core.Exceptions.MissingEntityException</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.ShimMissingEntityException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.ShimMissingEntityException.#ctor(Sfa.Core.Exceptions.MissingEntityException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Exceptions.Fakes.ShimMissingEntityException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.ShimMissingEntityException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.ShimMissingEntityException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.ShimMissingEntityException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.ShimMissingEntityException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.ShimMissingEntityException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of MissingEntityException.MissingEntityException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.ShimMissingEntityException.ConstructorType">
            <summary>Sets the shim of MissingEntityException.MissingEntityException(Type entityType)</summary>
        </member>
        <member name="T:Sfa.Core.Exceptions.Fakes.ShimUnauthorizedException">
            <summary>Shim type of Sfa.Core.Exceptions.UnauthorizedException</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.ShimUnauthorizedException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.ShimUnauthorizedException.#ctor(Sfa.Core.Exceptions.UnauthorizedException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Exceptions.Fakes.ShimUnauthorizedException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.ShimUnauthorizedException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.ShimUnauthorizedException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.ShimUnauthorizedException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.ShimUnauthorizedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.ShimUnauthorizedException.Constructor">
            <summary>Sets the shim of UnauthorizedException.UnauthorizedException()</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.ShimUnauthorizedException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of UnauthorizedException.UnauthorizedException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="T:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException">
            <summary>Stub type of Sfa.Core.Exceptions.BusinessLogicException</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubBusinessLogicException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubBusinessLogicException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.InitializeStub">
            <summary>Initializes a new instance of type StubBusinessLogicException</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubBusinessLogicException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:Sfa.Core.Exceptions.Fakes.StubMissingEntityException">
            <summary>Stub type of Sfa.Core.Exceptions.MissingEntityException</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.StubMissingEntityException.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.StubMissingEntityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.StubMissingEntityException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubMissingEntityException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.StubMissingEntityException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubMissingEntityException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.StubMissingEntityException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.StubMissingEntityException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubMissingEntityException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.StubMissingEntityException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubMissingEntityException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.StubMissingEntityException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubMissingEntityException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.StubMissingEntityException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubMissingEntityException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubMissingEntityException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.StubMissingEntityException.InitializeStub">
            <summary>Initializes a new instance of type StubMissingEntityException</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.StubMissingEntityException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.StubMissingEntityException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.StubMissingEntityException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubMissingEntityException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.StubMissingEntityException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubMissingEntityException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubMissingEntityException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.StubMissingEntityException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubMissingEntityException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.StubMissingEntityException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubMissingEntityException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException">
            <summary>Stub type of Sfa.Core.Exceptions.UnauthorizedException</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubUnauthorizedException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubUnauthorizedException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException.InitializeStub">
            <summary>Initializes a new instance of type StubUnauthorizedException</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Sfa.Core.Exceptions.Fakes.StubUnauthorizedException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:Sfa.Core.Fakes.ShimByteArrayExtensions">
            <summary>Shim type of Sfa.Core.ByteArrayExtensions</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimByteArrayExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimByteArrayExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimByteArrayExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.ShimByteArrayExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.ShimByteArrayExtensions.StructurallyEqualByteArrayByteArray">
            <summary>Sets the shim of ByteArrayExtensions.StructurallyEqual(Byte[] lhs, Byte[] rhs)</summary>
        </member>
        <member name="T:Sfa.Core.Fakes.ShimEnumAttributeMap">
            <summary>Shim type of Sfa.Core.EnumAttributeMap</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumAttributeMap.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumAttributeMap.#ctor(Sfa.Core.EnumAttributeMap)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Fakes.ShimEnumAttributeMap.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.ShimEnumAttributeMap.AllInstances.AttributesGet">
            <summary>Sets the shim of EnumAttributeMap.get_Attributes()</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.ShimEnumAttributeMap.AllInstances.AttributesSetIListOfAttribute">
            <summary>Sets the shim of EnumAttributeMap.set_Attributes(IList`1&lt;Attribute&gt; value)</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.ShimEnumAttributeMap.AllInstances.EnumValueGet">
            <summary>Sets the shim of EnumAttributeMap.get_EnumValue()</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.ShimEnumAttributeMap.AllInstances.EnumValueSetObject">
            <summary>Sets the shim of EnumAttributeMap.set_EnumValue(Object value)</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumAttributeMap.AllInstances.GetAttributeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Sfa.Core.EnumAttributeMap,``0})">
            <summary>Sets the shim of EnumAttributeMap.GetAttribute()</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.ShimEnumAttributeMap.AttributesGet">
            <summary>Sets the shim of EnumAttributeMap.get_Attributes()</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.ShimEnumAttributeMap.AttributesSetIListOfAttribute">
            <summary>Sets the shim of EnumAttributeMap.set_Attributes(IList`1&lt;Attribute&gt; value)</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumAttributeMap.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumAttributeMap.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.ShimEnumAttributeMap.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.ShimEnumAttributeMap.ConstructorObjectIListOfAttribute">
            <summary>Sets the shim of EnumAttributeMap.EnumAttributeMap(Object enumValue, IList`1&lt;Attribute&gt; attributes)</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.ShimEnumAttributeMap.EnumValueGet">
            <summary>Sets the shim of EnumAttributeMap.get_EnumValue()</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.ShimEnumAttributeMap.EnumValueSetObject">
            <summary>Sets the shim of EnumAttributeMap.set_EnumValue(Object value)</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumAttributeMap.GetAttributeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of EnumAttributeMap.GetAttribute()</summary>
        </member>
        <member name="T:Sfa.Core.Fakes.ShimEnumAttributeMaps">
            <summary>Shim type of Sfa.Core.EnumAttributeMaps</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumAttributeMaps.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumAttributeMaps.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumAttributeMaps.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.ShimEnumAttributeMaps.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.ShimEnumAttributeMaps.ForIEnumerableOfEnumAttributeMapObject">
            <summary>Sets the shim of EnumAttributeMaps.For(IEnumerable`1&lt;EnumAttributeMap&gt; maps, Object enumValue)</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.ShimEnumAttributeMaps.GetEnumAttributeMapsType">
            <summary>Sets the shim of EnumAttributeMaps.GetEnumAttributeMaps(Type type)</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.ShimEnumAttributeMaps.StaticConstructor">
            <summary>Sets the shim of EnumAttributeMaps.EnumAttributeMaps()</summary>
        </member>
        <member name="T:Sfa.Core.Fakes.ShimEnumDescriptor">
            <summary>Shim type of Sfa.Core.EnumDescriptor</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumDescriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumDescriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.ShimEnumDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumDescriptor.GetEnumCustomAttributesOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of EnumDescriptor.GetEnumCustomAttributes(Object enumValue)</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumDescriptor.GetEnumFromPropertyValueOf2StringFuncOfM1String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Func{``1,System.String},``0})">
            <summary>Sets the shim of EnumDescriptor.GetEnumFromPropertyValue(String propertyValue, Func`2&lt;!!1,String&gt; property)</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumDescriptor.GetEnumValueAttributeOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Sets the shim of EnumDescriptor.GetEnumValueAttribute(Object enumValue)</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumDescriptor.GetPropertyValueOf2M0FuncOfM1String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Func{``1,System.String},System.String})">
            <summary>Sets the shim of EnumDescriptor.GetPropertyValue(!!0 value, Func`2&lt;!!1,String&gt; property)</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumDescriptor.GetPropertyValueOf3M0FuncOfM1M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Func{``1,``2},``2})">
            <summary>Sets the shim of EnumDescriptor.GetPropertyValue(!!0 value, Func`2&lt;!!1,!!2&gt; property)</summary>
        </member>
        <member name="T:Sfa.Core.Fakes.ShimEnumDescriptorAttribute">
            <summary>Shim type of Sfa.Core.EnumDescriptorAttribute</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumDescriptorAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumDescriptorAttribute.#ctor(Sfa.Core.EnumDescriptorAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Fakes.ShimEnumDescriptorAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumDescriptorAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumDescriptorAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.ShimEnumDescriptorAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.ShimEnumDescriptorAttribute.Constructor">
            <summary>Sets the shim of EnumDescriptorAttribute.EnumDescriptorAttribute()</summary>
        </member>
        <member name="T:Sfa.Core.Fakes.ShimEnumDisplayAttribute">
            <summary>Shim type of Sfa.Core.EnumDisplayAttribute</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumDisplayAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumDisplayAttribute.#ctor(Sfa.Core.EnumDisplayAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Fakes.ShimEnumDisplayAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.ShimEnumDisplayAttribute.AllInstances.DisplayTextGet">
            <summary>Sets the shim of EnumDisplayAttribute.get_DisplayText()</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.ShimEnumDisplayAttribute.AllInstances.DisplayTextSetString">
            <summary>Sets the shim of EnumDisplayAttribute.set_DisplayText(String value)</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumDisplayAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumDisplayAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.ShimEnumDisplayAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.ShimEnumDisplayAttribute.Constructor">
            <summary>Sets the shim of EnumDisplayAttribute.EnumDisplayAttribute()</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.ShimEnumDisplayAttribute.DisplayTextGet">
            <summary>Sets the shim of EnumDisplayAttribute.get_DisplayText()</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.ShimEnumDisplayAttribute.DisplayTextSetString">
            <summary>Sets the shim of EnumDisplayAttribute.set_DisplayText(String value)</summary>
        </member>
        <member name="T:Sfa.Core.Fakes.ShimEnumTranslator">
            <summary>Shim type of Sfa.Core.EnumTranslator</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumTranslator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumTranslator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumTranslator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.ShimEnumTranslator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.ShimEnumTranslator.TranslateOf1NullableOfInt32M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Nullable{System.Int32},``0,``0})">
            <summary>Sets the shim of EnumTranslator.Translate(Nullable`1&lt;Int32&gt; value, !!0 default)</summary>
        </member>
        <member name="T:Sfa.Core.Fakes.StubEnumAttributeMap">
            <summary>Stub type of Sfa.Core.EnumAttributeMap</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.StubEnumAttributeMap.#ctor(System.Object,System.Collections.Generic.IList{System.Attribute})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.StubEnumAttributeMap.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.StubEnumAttributeMap.InitializeStub">
            <summary>Initializes a new instance of type StubEnumAttributeMap</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.StubEnumAttributeMap.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.StubEnumAttributeMap.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Sfa.Core.Fakes.StubEnumDescriptorAttribute">
            <summary>Stub type of Sfa.Core.EnumDescriptorAttribute</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.StubEnumDescriptorAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.StubEnumDescriptorAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.StubEnumDescriptorAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Sfa.Core.Fakes.StubEnumDescriptorAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.StubEnumDescriptorAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Sfa.Core.Fakes.StubEnumDescriptorAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.StubEnumDescriptorAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubEnumDescriptorAttribute</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.StubEnumDescriptorAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.StubEnumDescriptorAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.StubEnumDescriptorAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Sfa.Core.Fakes.StubEnumDescriptorAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.StubEnumDescriptorAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Sfa.Core.Fakes.StubEnumDescriptorAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.StubEnumDescriptorAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:Sfa.Core.Fakes.StubEnumDescriptorAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Sfa.Core.Fakes.StubEnumDisplayAttribute">
            <summary>Stub type of Sfa.Core.EnumDisplayAttribute</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.StubEnumDisplayAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.StubEnumDisplayAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.StubEnumDisplayAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Sfa.Core.Fakes.StubEnumDisplayAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.StubEnumDisplayAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Sfa.Core.Fakes.StubEnumDisplayAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.StubEnumDisplayAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubEnumDisplayAttribute</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.StubEnumDisplayAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.StubEnumDisplayAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.StubEnumDisplayAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Sfa.Core.Fakes.StubEnumDisplayAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Sfa.Core.Fakes.StubEnumDisplayAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Sfa.Core.Fakes.StubEnumDisplayAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:Sfa.Core.Fakes.StubEnumDisplayAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:Sfa.Core.Fakes.StubEnumDisplayAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Sfa.Core.IO.Fakes.ShimStreamExtensions">
            <summary>Shim type of Sfa.Core.IO.StreamExtensions</summary>
        </member>
        <member name="M:Sfa.Core.IO.Fakes.ShimStreamExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.IO.Fakes.ShimStreamExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.IO.Fakes.ShimStreamExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.IO.Fakes.ShimStreamExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.IO.Fakes.ShimStreamExtensions.ReadFullyStream">
            <summary>Sets the shim of StreamExtensions.ReadFully(Stream stream)</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper">
            <summary>Shim type of Sfa.Core.Logging.AsyncLoggingWrapper</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.#ctor(Sfa.Core.Logging.AsyncLoggingWrapper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.AddToQueueCheckIntervalLoggingLevelStringStringException">
            <summary>Sets the shim of AsyncLoggingWrapper.AddToQueueCheckInterval(LoggingLevel level, String category, String message, Exception exception)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.AddToQueueLoggingLevelStringStringException">
            <summary>Sets the shim of AsyncLoggingWrapper.AddToQueue(LoggingLevel level, String category, String message, Exception exception)</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.AllInstances.AddToQueueCheckIntervalLoggingLevelStringStringException">
            <summary>Sets the shim of AsyncLoggingWrapper.AddToQueueCheckInterval(LoggingLevel level, String category, String message, Exception exception)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.AllInstances.AddToQueueLoggingLevelStringStringException">
            <summary>Sets the shim of AsyncLoggingWrapper.AddToQueue(LoggingLevel level, String category, String message, Exception exception)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.AllInstances.Dispose">
            <summary>Sets the shim of AsyncLoggingWrapper.Dispose()</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.AllInstances.DisposeBoolean">
            <summary>Sets the shim of AsyncLoggingWrapper.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.AllInstances.LogExceptionStringException">
            <summary>Sets the shim of AsyncLoggingWrapper.LogException(String category, Exception exception)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.AllInstances.LogLoggingLevelStringFuncOfStringObjectArray">
            <summary>Sets the shim of AsyncLoggingWrapper.Log(LoggingLevel level, String category, Func`1&lt;String&gt; createMessage, Object[] args)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.AllInstances.LogQueueLengthLoggingLevelStringInt32">
            <summary>Sets the shim of AsyncLoggingWrapper.LogQueueLength(LoggingLevel level, String category, Int32 queueCount)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.AllInstances.Process">
            <summary>Sets the shim of AsyncLoggingWrapper.Process()</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.AllInstances.SetCategoryLoggingStringLoggingLevel">
            <summary>Sets the shim of AsyncLoggingWrapper.SetCategoryLogging(String category, LoggingLevel level)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.AllInstances.ShouldLogLoggingLevelString">
            <summary>Sets the shim of AsyncLoggingWrapper.ShouldLog(LoggingLevel level, String category)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.Bind(Sfa.Core.Logging.ILogger)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.ConstructorILogger">
            <summary>Sets the shim of AsyncLoggingWrapper.AsyncLoggingWrapper(ILogger logger)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.Dispose">
            <summary>Sets the shim of AsyncLoggingWrapper.Dispose()</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.DisposeBoolean">
            <summary>Sets the shim of AsyncLoggingWrapper.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.LogExceptionStringException">
            <summary>Sets the shim of AsyncLoggingWrapper.LogException(String category, Exception exception)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.LogLoggingLevelStringFuncOfStringObjectArray">
            <summary>Sets the shim of AsyncLoggingWrapper.Log(LoggingLevel level, String category, Func`1&lt;String&gt; createMessage, Object[] args)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.LogQueueLengthLoggingLevelStringInt32">
            <summary>Sets the shim of AsyncLoggingWrapper.LogQueueLength(LoggingLevel level, String category, Int32 queueCount)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.Process">
            <summary>Sets the shim of AsyncLoggingWrapper.Process()</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.SetCategoryLoggingStringLoggingLevel">
            <summary>Sets the shim of AsyncLoggingWrapper.SetCategoryLogging(String category, LoggingLevel level)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimAsyncLoggingWrapper.ShouldLogLoggingLevelString">
            <summary>Sets the shim of AsyncLoggingWrapper.ShouldLog(LoggingLevel level, String category)</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.ShimBaseLogger">
            <summary>Shim type of Sfa.Core.Logging.BaseLogger</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimBaseLogger.#ctor(Sfa.Core.Logging.BaseLogger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.ShimBaseLogger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimBaseLogger.AllInstances.LogExceptionStringException">
            <summary>Sets the shim of BaseLogger.LogException(String category, Exception exception)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimBaseLogger.AllInstances.LogLoggingLevelStringFuncOfStringObjectArray">
            <summary>Sets the shim of BaseLogger.Log(LoggingLevel level, String category, Func`1&lt;String&gt; createMessage, Object[] args)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimBaseLogger.AllInstances.OnLogExceptionStringException">
            <summary>Sets the shim of BaseLogger.OnLogException(String category, Exception exception)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimBaseLogger.AllInstances.SetCategoryLoggingStringLoggingLevel">
            <summary>Sets the shim of BaseLogger.SetCategoryLogging(String category, LoggingLevel level)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimBaseLogger.AllInstances.SetLayoutFuncOfLoggingLevelStringStringString">
            <summary>Sets the shim of BaseLogger.SetLayout(Func`4&lt;LoggingLevel,String,String,String&gt; messageLayout)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimBaseLogger.AllInstances.ShouldLogLoggingLevelString">
            <summary>Sets the shim of BaseLogger.ShouldLog(LoggingLevel queryLevel, String category)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimBaseLogger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimBaseLogger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimBaseLogger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimBaseLogger.Bind(Sfa.Core.Logging.ILogger)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimBaseLogger.Constructor">
            <summary>Sets the shim of BaseLogger.BaseLogger()</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimBaseLogger.LogExceptionStringException">
            <summary>Sets the shim of BaseLogger.LogException(String category, Exception exception)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimBaseLogger.LogLoggingLevelStringFuncOfStringObjectArray">
            <summary>Sets the shim of BaseLogger.Log(LoggingLevel level, String category, Func`1&lt;String&gt; createMessage, Object[] args)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimBaseLogger.OnLogExceptionStringException">
            <summary>Sets the shim of BaseLogger.OnLogException(String category, Exception exception)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimBaseLogger.SetCategoryLoggingStringLoggingLevel">
            <summary>Sets the shim of BaseLogger.SetCategoryLogging(String category, LoggingLevel level)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimBaseLogger.SetLayoutFuncOfLoggingLevelStringStringString">
            <summary>Sets the shim of BaseLogger.SetLayout(Func`4&lt;LoggingLevel,String,String,String&gt; messageLayout)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimBaseLogger.ShouldLogLoggingLevelString">
            <summary>Sets the shim of BaseLogger.ShouldLog(LoggingLevel queryLevel, String category)</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.ShimBaseLoggerConfigurationSettings">
            <summary>Shim type of Sfa.Core.Logging.BaseLoggerConfigurationSettings</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimBaseLoggerConfigurationSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimBaseLoggerConfigurationSettings.#ctor(Sfa.Core.Logging.BaseLoggerConfigurationSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.ShimBaseLoggerConfigurationSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimBaseLoggerConfigurationSettings.AllInstances.SettingsGet">
            <summary>Sets the shim of BaseLoggerConfigurationSettings.get_Settings()</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimBaseLoggerConfigurationSettings.AllInstances.SettingsSetLogSettingCollection">
            <summary>Sets the shim of BaseLoggerConfigurationSettings.set_Settings(LogSettingCollection value)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimBaseLoggerConfigurationSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimBaseLoggerConfigurationSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimBaseLoggerConfigurationSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimBaseLoggerConfigurationSettings.Constructor">
            <summary>Sets the shim of BaseLoggerConfigurationSettings.BaseLoggerConfigurationSettings()</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimBaseLoggerConfigurationSettings.SettingsGet">
            <summary>Sets the shim of BaseLoggerConfigurationSettings.get_Settings()</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimBaseLoggerConfigurationSettings.SettingsSetLogSettingCollection">
            <summary>Sets the shim of BaseLoggerConfigurationSettings.set_Settings(LogSettingCollection value)</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.ShimConsoleLogger">
            <summary>Shim type of Sfa.Core.Logging.ConsoleLogger</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimConsoleLogger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimConsoleLogger.#ctor(Sfa.Core.Logging.ConsoleLogger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.ShimConsoleLogger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimConsoleLogger.AllInstances.LogMessageLoggingLevelStringString">
            <summary>Sets the shim of ConsoleLogger.LogMessage(LoggingLevel level, String category, String message)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimConsoleLogger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimConsoleLogger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimConsoleLogger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimConsoleLogger.Bind(Sfa.Core.Logging.ILogger)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimConsoleLogger.Constructor">
            <summary>Sets the shim of ConsoleLogger.ConsoleLogger()</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimConsoleLogger.LogMessageLoggingLevelStringString">
            <summary>Sets the shim of ConsoleLogger.LogMessage(LoggingLevel level, String category, String message)</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.ShimCoreLoggingCategory">
            <summary>Shim type of Sfa.Core.Logging.CoreLoggingCategory</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimCoreLoggingCategory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimCoreLoggingCategory.#ctor(Sfa.Core.Logging.CoreLoggingCategory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.ShimCoreLoggingCategory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimCoreLoggingCategory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimCoreLoggingCategory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimCoreLoggingCategory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimCoreLoggingCategory.Constructor">
            <summary>Sets the shim of CoreLoggingCategory.CoreLoggingCategory()</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimCoreLoggingCategory.StaticConstructor">
            <summary>Sets the shim of CoreLoggingCategory.CoreLoggingCategory()</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.ShimLogSetting">
            <summary>Shim type of Sfa.Core.Logging.LogSetting</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimLogSetting.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimLogSetting.#ctor(Sfa.Core.Logging.LogSetting)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.ShimLogSetting.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimLogSetting.AllInstances.categoryGet">
            <summary>Sets the shim of LogSetting.get_category()</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimLogSetting.AllInstances.categorySetString">
            <summary>Sets the shim of LogSetting.set_category(String value)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimLogSetting.AllInstances.levelGet">
            <summary>Sets the shim of LogSetting.get_level()</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimLogSetting.AllInstances.levelSetLoggingLevel">
            <summary>Sets the shim of LogSetting.set_level(LoggingLevel value)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimLogSetting.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimLogSetting.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimLogSetting.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimLogSetting.Constructor">
            <summary>Sets the shim of LogSetting.LogSetting()</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimLogSetting.categoryGet">
            <summary>Sets the shim of LogSetting.get_category()</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimLogSetting.categorySetString">
            <summary>Sets the shim of LogSetting.set_category(String value)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimLogSetting.levelGet">
            <summary>Sets the shim of LogSetting.get_level()</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimLogSetting.levelSetLoggingLevel">
            <summary>Sets the shim of LogSetting.set_level(LoggingLevel value)</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.ShimLogSettingCollection">
            <summary>Shim type of Sfa.Core.Logging.LogSettingCollection</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimLogSettingCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimLogSettingCollection.#ctor(Sfa.Core.Logging.LogSettingCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.ShimLogSettingCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimLogSettingCollection.AllInstances.CollectionTypeGet">
            <summary>Sets the shim of LogSettingCollection.get_CollectionType()</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimLogSettingCollection.AllInstances.CreateNewElement">
            <summary>Sets the shim of LogSettingCollection.CreateNewElement()</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimLogSettingCollection.AllInstances.ElementNameGet">
            <summary>Sets the shim of LogSettingCollection.get_ElementName()</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimLogSettingCollection.AllInstances.GetElementKeyConfigurationElement">
            <summary>Sets the shim of LogSettingCollection.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimLogSettingCollection.AllInstances.IsElementNameString">
            <summary>Sets the shim of LogSettingCollection.IsElementName(String elementName)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimLogSettingCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of LogSettingCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimLogSettingCollection.AllInstances.ItemGetString">
            <summary>Sets the shim of LogSettingCollection.get_Item(String key)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimLogSettingCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimLogSettingCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimLogSettingCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimLogSettingCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimLogSettingCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimLogSettingCollection.CollectionTypeGet">
            <summary>Sets the shim of LogSettingCollection.get_CollectionType()</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimLogSettingCollection.Constructor">
            <summary>Sets the shim of LogSettingCollection.LogSettingCollection()</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimLogSettingCollection.CreateNewElement">
            <summary>Sets the shim of LogSettingCollection.CreateNewElement()</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimLogSettingCollection.ElementNameGet">
            <summary>Sets the shim of LogSettingCollection.get_ElementName()</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimLogSettingCollection.GetElementKeyConfigurationElement">
            <summary>Sets the shim of LogSettingCollection.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimLogSettingCollection.IsElementNameString">
            <summary>Sets the shim of LogSettingCollection.IsElementName(String elementName)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimLogSettingCollection.ItemGetInt32">
            <summary>Sets the shim of LogSettingCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimLogSettingCollection.ItemGetString">
            <summary>Sets the shim of LogSettingCollection.get_Item(String key)</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.ShimMultiLogger">
            <summary>Shim type of Sfa.Core.Logging.MultiLogger</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimMultiLogger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimMultiLogger.#ctor(Sfa.Core.Logging.MultiLogger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.ShimMultiLogger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimMultiLogger.AllInstances.LogExceptionStringException">
            <summary>Sets the shim of MultiLogger.LogException(String category, Exception exception)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimMultiLogger.AllInstances.LogLoggingLevelStringFuncOfStringObjectArray">
            <summary>Sets the shim of MultiLogger.Log(LoggingLevel level, String category, Func`1&lt;String&gt; createMessage, Object[] args)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimMultiLogger.AllInstances.SetCategoryLoggingStringLoggingLevel">
            <summary>Sets the shim of MultiLogger.SetCategoryLogging(String category, LoggingLevel level)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimMultiLogger.AllInstances.ShouldLogLoggingLevelString">
            <summary>Sets the shim of MultiLogger.ShouldLog(LoggingLevel level, String category)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimMultiLogger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimMultiLogger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimMultiLogger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimMultiLogger.Bind(Sfa.Core.Logging.ILogger)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimMultiLogger.ConstructorILoggerArray">
            <summary>Sets the shim of MultiLogger.MultiLogger(ILogger[] loggers)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimMultiLogger.LogExceptionStringException">
            <summary>Sets the shim of MultiLogger.LogException(String category, Exception exception)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimMultiLogger.LogLoggingLevelStringFuncOfStringObjectArray">
            <summary>Sets the shim of MultiLogger.Log(LoggingLevel level, String category, Func`1&lt;String&gt; createMessage, Object[] args)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimMultiLogger.SetCategoryLoggingStringLoggingLevel">
            <summary>Sets the shim of MultiLogger.SetCategoryLogging(String category, LoggingLevel level)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimMultiLogger.ShouldLogLoggingLevelString">
            <summary>Sets the shim of MultiLogger.ShouldLog(LoggingLevel level, String category)</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.ShimTraceLogger">
            <summary>Shim type of Sfa.Core.Logging.TraceLogger</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimTraceLogger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimTraceLogger.#ctor(Sfa.Core.Logging.TraceLogger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.ShimTraceLogger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimTraceLogger.AllInstances.LogMessageLoggingLevelStringString">
            <summary>Sets the shim of TraceLogger.LogMessage(LoggingLevel level, String category, String message)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimTraceLogger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimTraceLogger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimTraceLogger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.ShimTraceLogger.Bind(Sfa.Core.Logging.ILogger)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimTraceLogger.Constructor">
            <summary>Sets the shim of TraceLogger.TraceLogger()</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.ShimTraceLogger.LogMessageLoggingLevelStringString">
            <summary>Sets the shim of TraceLogger.LogMessage(LoggingLevel level, String category, String message)</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.StubAsyncLoggingWrapper">
            <summary>Stub type of Sfa.Core.Logging.AsyncLoggingWrapper</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubAsyncLoggingWrapper.#ctor(Sfa.Core.Logging.ILogger)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubAsyncLoggingWrapper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubAsyncLoggingWrapper.Dispose(System.Boolean)">
            <summary>Sets the stub of AsyncLoggingWrapper.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubAsyncLoggingWrapper.DisposeBoolean">
            <summary>Sets the stub of AsyncLoggingWrapper.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubAsyncLoggingWrapper.InitializeStub">
            <summary>Initializes a new instance of type StubAsyncLoggingWrapper</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubAsyncLoggingWrapper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubAsyncLoggingWrapper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.StubBaseLogger">
            <summary>Stub type of Sfa.Core.Logging.BaseLogger</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLogger.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubBaseLogger.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLogger.InitializeStub">
            <summary>Initializes a new instance of type StubBaseLogger</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubBaseLogger.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubBaseLogger.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLogger.Log(Sfa.Core.Logging.LoggingLevel,System.String,System.Func{System.String},System.Object[])">
            <summary>Sets the stub of BaseLogger.Log(LoggingLevel level, String category, Func`1&lt;String&gt; createMessage, Object[] args)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLogger.LogLoggingLevelStringFuncOfStringObjectArray">
            <summary>Sets the stub of BaseLogger.Log(LoggingLevel level, String category, Func`1&lt;String&gt; createMessage, Object[] args)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLogger.LogMessage(Sfa.Core.Logging.LoggingLevel,System.String,System.String)">
            <summary>Sets the stub of BaseLogger.LogMessage(LoggingLevel level, String category, String message)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLogger.LogMessageLoggingLevelStringString">
            <summary>Sets the stub of BaseLogger.LogMessage(LoggingLevel level, String category, String message)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLogger.OnLogException(System.String,System.Exception)">
            <summary>Sets the stub of BaseLogger.OnLogException(String category, Exception exception)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLogger.OnLogExceptionStringException">
            <summary>Sets the stub of BaseLogger.OnLogException(String category, Exception exception)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLogger.SetCategoryLogging(System.String,Sfa.Core.Logging.LoggingLevel)">
            <summary>Sets the stub of BaseLogger.SetCategoryLogging(String category, LoggingLevel level)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLogger.SetCategoryLoggingStringLoggingLevel">
            <summary>Sets the stub of BaseLogger.SetCategoryLogging(String category, LoggingLevel level)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLogger.ShouldLog(Sfa.Core.Logging.LoggingLevel,System.String)">
            <summary>Sets the stub of BaseLogger.ShouldLog(LoggingLevel queryLevel, String category)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLogger.ShouldLogLoggingLevelString">
            <summary>Sets the stub of BaseLogger.ShouldLog(LoggingLevel queryLevel, String category)</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings">
            <summary>Stub type of Sfa.Core.Logging.BaseLoggerConfigurationSettings</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.DeserializeSection(System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationSection.DeserializeSection(XmlReader reader)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.DeserializeSectionXmlReader">
            <summary>Sets the stub of ConfigurationSection.DeserializeSection(XmlReader reader)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.GetRuntimeObject">
            <summary>Sets the stub of ConfigurationSection.GetRuntimeObject()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.GetRuntimeObject01">
            <summary>Sets the stub of ConfigurationSection.GetRuntimeObject()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.InitializeStub">
            <summary>Initializes a new instance of type StubBaseLoggerConfigurationSettings</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.IsModified">
            <summary>Sets the stub of ConfigurationSection.IsModified()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.IsModified01">
            <summary>Sets the stub of ConfigurationSection.IsModified()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.Properties">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.PropertiesGet">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.ResetModified">
            <summary>Sets the stub of ConfigurationSection.ResetModified()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.ResetModified01">
            <summary>Sets the stub of ConfigurationSection.ResetModified()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationSection.SerializeSection(ConfigurationElement parentElement, String name, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.SerializeSectionConfigurationElementStringConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationSection.SerializeSection(ConfigurationElement parentElement, String name, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement element, String elementName, FrameworkName targetFramework)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.ShouldSerializeElementInTargetVersionConfigurationElementStringFrameworkName">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement element, String elementName, FrameworkName targetFramework)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty property, String propertyName, FrameworkName targetFramework, ConfigurationElement parentConfigurationElement)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.ShouldSerializePropertyInTargetVersionConfigurationPropertyStringFrameworkNameConfigurationElement">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty property, String propertyName, FrameworkName targetFramework, ConfigurationElement parentConfigurationElement)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName targetFramework)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.ShouldSerializeSectionInTargetVersionFrameworkName">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName targetFramework)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubBaseLoggerConfigurationSettings.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.StubConsoleLogger">
            <summary>Stub type of Sfa.Core.Logging.ConsoleLogger</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubConsoleLogger.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubConsoleLogger.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubConsoleLogger.InitializeStub">
            <summary>Initializes a new instance of type StubConsoleLogger</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubConsoleLogger.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubConsoleLogger.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubConsoleLogger.Log(Sfa.Core.Logging.LoggingLevel,System.String,System.Func{System.String},System.Object[])">
            <summary>Sets the stub of BaseLogger.Log(LoggingLevel level, String category, Func`1&lt;String&gt; createMessage, Object[] args)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubConsoleLogger.LogLoggingLevelStringFuncOfStringObjectArray">
            <summary>Sets the stub of BaseLogger.Log(LoggingLevel level, String category, Func`1&lt;String&gt; createMessage, Object[] args)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubConsoleLogger.LogMessage(Sfa.Core.Logging.LoggingLevel,System.String,System.String)">
            <summary>Sets the stub of ConsoleLogger.LogMessage(LoggingLevel level, String category, String message)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubConsoleLogger.LogMessageLoggingLevelStringString">
            <summary>Sets the stub of ConsoleLogger.LogMessage(LoggingLevel level, String category, String message)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubConsoleLogger.OnLogException(System.String,System.Exception)">
            <summary>Sets the stub of BaseLogger.OnLogException(String category, Exception exception)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubConsoleLogger.OnLogExceptionStringException">
            <summary>Sets the stub of BaseLogger.OnLogException(String category, Exception exception)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubConsoleLogger.SetCategoryLogging(System.String,Sfa.Core.Logging.LoggingLevel)">
            <summary>Sets the stub of BaseLogger.SetCategoryLogging(String category, LoggingLevel level)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubConsoleLogger.SetCategoryLoggingStringLoggingLevel">
            <summary>Sets the stub of BaseLogger.SetCategoryLogging(String category, LoggingLevel level)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubConsoleLogger.ShouldLog(Sfa.Core.Logging.LoggingLevel,System.String)">
            <summary>Sets the stub of BaseLogger.ShouldLog(LoggingLevel queryLevel, String category)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubConsoleLogger.ShouldLogLoggingLevelString">
            <summary>Sets the stub of BaseLogger.ShouldLog(LoggingLevel queryLevel, String category)</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.StubCoreLoggingCategory">
            <summary>Stub type of Sfa.Core.Logging.CoreLoggingCategory</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubCoreLoggingCategory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubCoreLoggingCategory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubCoreLoggingCategory.InitializeStub">
            <summary>Initializes a new instance of type StubCoreLoggingCategory</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubCoreLoggingCategory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubCoreLoggingCategory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.StubILogger">
            <summary>Stub type of Sfa.Core.Logging.ILogger</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubILogger.#ctor">
            <summary>Initializes a new instance of type StubILogger</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubILogger.LogExceptionStringException">
            <summary>Sets the stub of ILogger.LogException(String category, Exception exception)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubILogger.LogLoggingLevelStringFuncOfStringObjectArray">
            <summary>Sets the stub of ILogger.Log(LoggingLevel level, String category, Func`1&lt;String&gt; createMessage, Object[] args)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubILogger.SetCategoryLoggingStringLoggingLevel">
            <summary>Sets the stub of ILogger.SetCategoryLogging(String category, LoggingLevel level)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubILogger.Sfa#Core#Logging#ILogger#Log(Sfa.Core.Logging.LoggingLevel,System.String,System.Func{System.String},System.Object[])">
            <summary>Sets the stub of ILogger.Log(LoggingLevel level, String category, Func`1&lt;String&gt; createMessage, Object[] args)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubILogger.Sfa#Core#Logging#ILogger#LogException(System.String,System.Exception)">
            <summary>Sets the stub of ILogger.LogException(String category, Exception exception)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubILogger.Sfa#Core#Logging#ILogger#SetCategoryLogging(System.String,Sfa.Core.Logging.LoggingLevel)">
            <summary>Sets the stub of ILogger.SetCategoryLogging(String category, LoggingLevel level)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubILogger.Sfa#Core#Logging#ILogger#ShouldLog(Sfa.Core.Logging.LoggingLevel,System.String)">
            <summary>Sets the stub of ILogger.ShouldLog(LoggingLevel level, String category)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubILogger.ShouldLogLoggingLevelString">
            <summary>Sets the stub of ILogger.ShouldLog(LoggingLevel level, String category)</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.StubLogSetting">
            <summary>Stub type of Sfa.Core.Logging.LogSetting</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSetting.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubLogSetting.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSetting.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSetting.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubLogSetting.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSetting.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSetting.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSetting.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSetting.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSetting.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSetting.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSetting.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSetting.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSetting.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSetting.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSetting.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSetting.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSetting.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSetting.InitializeStub">
            <summary>Initializes a new instance of type StubLogSetting</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubLogSetting.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubLogSetting.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSetting.IsModified">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSetting.IsModified01">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSetting.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSetting.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSetting.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSetting.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSetting.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSetting.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSetting.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSetting.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSetting.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSetting.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSetting.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSetting.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSetting.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSetting.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubLogSetting.Properties">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSetting.PropertiesGet">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSetting.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSetting.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSetting.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSetting.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSetting.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSetting.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSetting.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSetting.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSetting.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSetting.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSetting.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSetting.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.StubLogSettingCollection">
            <summary>Stub type of Sfa.Core.Logging.LogSettingCollection</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.BaseAdd(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(ConfigurationElement element)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(Int32 index, ConfigurationElement element)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.BaseAddConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(ConfigurationElement element)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.BaseAddInt32ConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.BaseAdd(Int32 index, ConfigurationElement element)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubLogSettingCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubLogSettingCollection.CollectionType">
            <summary>Sets the stub of LogSettingCollection.get_CollectionType()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.CollectionTypeGet">
            <summary>Sets the stub of LogSettingCollection.get_CollectionType()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.CreateNewElement">
            <summary>Sets the stub of LogSettingCollection.CreateNewElement()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.CreateNewElement(System.String)">
            <summary>Sets the stub of ConfigurationElementCollection.CreateNewElement(String elementName)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.CreateNewElement01">
            <summary>Sets the stub of LogSettingCollection.CreateNewElement()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.CreateNewElementString">
            <summary>Sets the stub of ConfigurationElementCollection.CreateNewElement(String elementName)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubLogSettingCollection.ElementName">
            <summary>Sets the stub of LogSettingCollection.get_ElementName()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.ElementNameGet">
            <summary>Sets the stub of LogSettingCollection.get_ElementName()</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubLogSettingCollection.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElementCollection.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.EqualsObject">
            <summary>Sets the stub of ConfigurationElementCollection.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of LogSettingCollection.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.GetElementKeyConfigurationElement">
            <summary>Sets the stub of LogSettingCollection.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.GetHashCode">
            <summary>Sets the stub of ConfigurationElementCollection.GetHashCode()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.GetHashCode01">
            <summary>Sets the stub of ConfigurationElementCollection.GetHashCode()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.InitializeStub">
            <summary>Initializes a new instance of type StubLogSettingCollection</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubLogSettingCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubLogSettingCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.IsElementName(System.String)">
            <summary>Sets the stub of LogSettingCollection.IsElementName(String elementName)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.IsElementNameString">
            <summary>Sets the stub of LogSettingCollection.IsElementName(String elementName)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.IsElementRemovable(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementRemovable(ConfigurationElement element)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.IsElementRemovableConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.IsElementRemovable(ConfigurationElement element)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.IsModified">
            <summary>Sets the stub of ConfigurationElementCollection.IsModified()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.IsModified01">
            <summary>Sets the stub of ConfigurationElementCollection.IsModified()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.IsReadOnly">
            <summary>Sets the stub of ConfigurationElementCollection.IsReadOnly()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElementCollection.IsReadOnly()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubLogSettingCollection.Properties">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.PropertiesGet">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElementCollection.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElementCollection.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.ResetModified">
            <summary>Sets the stub of ConfigurationElementCollection.ResetModified()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.ResetModified01">
            <summary>Sets the stub of ConfigurationElementCollection.ResetModified()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElementCollection.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElementCollection.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.SetReadOnly">
            <summary>Sets the stub of ConfigurationElementCollection.SetReadOnly()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElementCollection.SetReadOnly()</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubLogSettingCollection.ThrowOnDuplicate">
            <summary>Sets the stub of ConfigurationElementCollection.get_ThrowOnDuplicate()</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.ThrowOnDuplicateGet">
            <summary>Sets the stub of ConfigurationElementCollection.get_ThrowOnDuplicate()</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubLogSettingCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElementCollection.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubLogSettingCollection.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElementCollection.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.StubMultiLogger">
            <summary>Stub type of Sfa.Core.Logging.MultiLogger</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubMultiLogger.#ctor(Sfa.Core.Logging.ILogger[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubMultiLogger.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubMultiLogger.InitializeStub">
            <summary>Initializes a new instance of type StubMultiLogger</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubMultiLogger.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubMultiLogger.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Sfa.Core.Logging.Fakes.StubTraceLogger">
            <summary>Stub type of Sfa.Core.Logging.TraceLogger</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubTraceLogger.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubTraceLogger.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubTraceLogger.InitializeStub">
            <summary>Initializes a new instance of type StubTraceLogger</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubTraceLogger.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Sfa.Core.Logging.Fakes.StubTraceLogger.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubTraceLogger.Log(Sfa.Core.Logging.LoggingLevel,System.String,System.Func{System.String},System.Object[])">
            <summary>Sets the stub of BaseLogger.Log(LoggingLevel level, String category, Func`1&lt;String&gt; createMessage, Object[] args)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubTraceLogger.LogLoggingLevelStringFuncOfStringObjectArray">
            <summary>Sets the stub of BaseLogger.Log(LoggingLevel level, String category, Func`1&lt;String&gt; createMessage, Object[] args)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubTraceLogger.LogMessage(Sfa.Core.Logging.LoggingLevel,System.String,System.String)">
            <summary>Sets the stub of TraceLogger.LogMessage(LoggingLevel level, String category, String message)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubTraceLogger.LogMessageLoggingLevelStringString">
            <summary>Sets the stub of TraceLogger.LogMessage(LoggingLevel level, String category, String message)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubTraceLogger.OnLogException(System.String,System.Exception)">
            <summary>Sets the stub of BaseLogger.OnLogException(String category, Exception exception)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubTraceLogger.OnLogExceptionStringException">
            <summary>Sets the stub of BaseLogger.OnLogException(String category, Exception exception)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubTraceLogger.SetCategoryLogging(System.String,Sfa.Core.Logging.LoggingLevel)">
            <summary>Sets the stub of BaseLogger.SetCategoryLogging(String category, LoggingLevel level)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubTraceLogger.SetCategoryLoggingStringLoggingLevel">
            <summary>Sets the stub of BaseLogger.SetCategoryLogging(String category, LoggingLevel level)</summary>
        </member>
        <member name="M:Sfa.Core.Logging.Fakes.StubTraceLogger.ShouldLog(Sfa.Core.Logging.LoggingLevel,System.String)">
            <summary>Sets the stub of BaseLogger.ShouldLog(LoggingLevel queryLevel, String category)</summary>
        </member>
        <member name="F:Sfa.Core.Logging.Fakes.StubTraceLogger.ShouldLogLoggingLevelString">
            <summary>Sets the stub of BaseLogger.ShouldLog(LoggingLevel queryLevel, String category)</summary>
        </member>
        <member name="T:Sfa.Core.Messaging.Fakes.StubIMessage">
            <summary>Stub type of Sfa.Core.Messaging.IMessage</summary>
        </member>
        <member name="M:Sfa.Core.Messaging.Fakes.StubIMessage.#ctor">
            <summary>Initializes a new instance of type StubIMessage</summary>
        </member>
        <member name="T:Sfa.Core.Messaging.Fakes.StubIMessagingClient">
            <summary>Stub type of Sfa.Core.Messaging.IMessagingClient</summary>
        </member>
        <member name="M:Sfa.Core.Messaging.Fakes.StubIMessagingClient.#ctor">
            <summary>Initializes a new instance of type StubIMessagingClient</summary>
        </member>
        <member name="M:Sfa.Core.Messaging.Fakes.StubIMessagingClient.CreateMessageOf1M0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,System.TimeSpan})">
            <summary>Sets stubs of CreateMessage(!!0 message, TimeSpan delay)</summary>
        </member>
        <member name="M:Sfa.Core.Messaging.Fakes.StubIMessagingClient.Sfa#Core#Messaging#IMessagingClient#CreateMessage``1(``0,System.TimeSpan)">
            <summary>Sets the stub of IMessagingClient.CreateMessage(!!0 message, TimeSpan delay)</summary>
        </member>
        <member name="T:Sfa.Core.Reflection.Fakes.ShimCustomAttributeProviderExtensions">
            <summary>Shim type of Sfa.Core.Reflection.CustomAttributeProviderExtensions</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimCustomAttributeProviderExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimCustomAttributeProviderExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimCustomAttributeProviderExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Reflection.Fakes.ShimCustomAttributeProviderExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimCustomAttributeProviderExtensions.GetAttributeOf1ICustomAttributeProviderBooleanInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Reflection.ICustomAttributeProvider,System.Boolean,System.Int32,``0})">
            <summary>Sets the shim of CustomAttributeProviderExtensions.GetAttribute(ICustomAttributeProvider customAttributeProvider, Boolean inherit, Int32 index)</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimCustomAttributeProviderExtensions.GetAttributesOf1ICustomAttributeProviderBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Reflection.ICustomAttributeProvider,System.Boolean,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of CustomAttributeProviderExtensions.GetAttributes(ICustomAttributeProvider customAttributeProvider, Boolean inherit)</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimCustomAttributeProviderExtensions.HasAttributeOf1ICustomAttributeProviderBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Reflection.ICustomAttributeProvider,System.Boolean,System.Boolean})">
            <summary>Sets the shim of CustomAttributeProviderExtensions.HasAttribute(ICustomAttributeProvider customAttributeProvider, Boolean inherit)</summary>
        </member>
        <member name="T:Sfa.Core.Reflection.Fakes.ShimExpressionExtensions">
            <summary>Shim type of Sfa.Core.Reflection.ExpressionExtensions</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimExpressionExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimExpressionExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimExpressionExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Reflection.Fakes.ShimExpressionExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimExpressionExtensions.EnsurePropertyOf2ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.MemberExpression})">
            <summary>Sets the shim of ExpressionExtensions.EnsureProperty(Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimExpressionExtensions.GetPropertyBackingFieldOf2ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Reflection.FieldInfo})">
            <summary>Sets the shim of ExpressionExtensions.GetPropertyBackingField(Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; property)</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimExpressionExtensions.GetPropertyNameOf2ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String})">
            <summary>Sets the shim of ExpressionExtensions.GetPropertyName(Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimExpressionExtensions.GetPropertyOf2ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Reflection.PropertyInfo})">
            <summary>Sets the shim of ExpressionExtensions.GetProperty(Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="T:Sfa.Core.Reflection.Fakes.ShimMemberInfoExtensions">
            <summary>Shim type of Sfa.Core.Reflection.MemberInfoExtensions</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimMemberInfoExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimMemberInfoExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimMemberInfoExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Reflection.Fakes.ShimMemberInfoExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimMemberInfoExtensions.IsDefinedOf1MemberInfoBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Reflection.MemberInfo,System.Boolean,System.Boolean})">
            <summary>Sets the shim of MemberInfoExtensions.IsDefined(MemberInfo memberInfo, Boolean inherit)</summary>
        </member>
        <member name="T:Sfa.Core.Reflection.Fakes.ShimObjectExtensions">
            <summary>Shim type of Sfa.Core.Reflection.ObjectExtensions</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimObjectExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimObjectExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimObjectExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Reflection.Fakes.ShimObjectExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimObjectExtensions.GetAllFieldsWithoutAttributeOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Collections.Generic.IList{System.Reflection.FieldInfo}})">
            <summary>Sets the shim of ObjectExtensions.GetAllFieldsWithoutAttribute(Object target)</summary>
        </member>
        <member name="P:Sfa.Core.Reflection.Fakes.ShimObjectExtensions.GetPrivateFieldTypeString">
            <summary>Sets the shim of ObjectExtensions.GetPrivateField(Type type, String fieldName)</summary>
        </member>
        <member name="P:Sfa.Core.Reflection.Fakes.ShimObjectExtensions.GetPrivateFieldValueObjectString">
            <summary>Sets the shim of ObjectExtensions.GetPrivateFieldValue(Object owner, String fieldName)</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimObjectExtensions.GetPropertyInfoOf2M0ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Reflection.PropertyInfo})">
            <summary>Sets the shim of ObjectExtensions.GetPropertyInfo(!!0 instance, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; expression)</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimObjectExtensions.SetPrivateFieldValueOf1M0StringObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.String,System.Object,``0})">
            <summary>Sets the shim of ObjectExtensions.SetPrivateFieldValue(!!0 owner, String fieldName, Object value)</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimObjectExtensions.SetPropertyValueOf2M0ExpressionOfFuncOfM0M1M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,``0})">
            <summary>Sets the shim of ObjectExtensions.SetPropertyValue(!!0 instance, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; propertyGetExpression, !!1 value)</summary>
        </member>
        <member name="T:Sfa.Core.Reflection.Fakes.ShimTypeExtensions">
            <summary>Shim type of Sfa.Core.Reflection.TypeExtensions</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimTypeExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimTypeExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimTypeExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Reflection.Fakes.ShimTypeExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Reflection.Fakes.ShimTypeExtensions.GetAllFieldsType">
            <summary>Sets the shim of TypeExtensions.GetAllFields(Type targetType)</summary>
        </member>
        <member name="M:Sfa.Core.Reflection.Fakes.ShimTypeExtensions.GetAllFieldsWithoutAttributeOf1Type``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type,System.Collections.Generic.IList{System.Reflection.FieldInfo}})">
            <summary>Sets the shim of TypeExtensions.GetAllFieldsWithoutAttribute(Type targetType)</summary>
        </member>
        <member name="T:Sfa.Core.Security.Claims.Fakes.ShimClaimsPrincipalExtensions">
            <summary>Shim type of Sfa.Core.Security.Claims.ClaimsPrincipalExtensions</summary>
        </member>
        <member name="M:Sfa.Core.Security.Claims.Fakes.ShimClaimsPrincipalExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:Sfa.Core.Security.Claims.Fakes.ShimClaimsPrincipalExtensions.AddClaimClaimsPrincipalStringString">
            <summary>Sets the shim of ClaimsPrincipalExtensions.AddClaim(ClaimsPrincipal claimsPrincipal, String type, String value)</summary>
        </member>
        <member name="M:Sfa.Core.Security.Claims.Fakes.ShimClaimsPrincipalExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Security.Claims.Fakes.ShimClaimsPrincipalExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Security.Claims.Fakes.ShimClaimsPrincipalExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Security.Claims.Fakes.ShimClaimsPrincipalExtensions.ClearAllClaimsPrincipalString">
            <summary>Sets the shim of ClaimsPrincipalExtensions.ClearAll(ClaimsPrincipal claimsPrincipal, String type)</summary>
        </member>
        <member name="T:Sfa.Core.Text.Fakes.ShimStringBuilderExtensions">
            <summary>Shim type of Sfa.Core.Text.StringBuilderExtensions</summary>
        </member>
        <member name="M:Sfa.Core.Text.Fakes.ShimStringBuilderExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:Sfa.Core.Text.Fakes.ShimStringBuilderExtensions.AppendCsvDataStringBuilderListOfStringListOfListOfString">
            <summary>Sets the shim of StringBuilderExtensions.AppendCsvData(StringBuilder value, List`1&lt;String&gt; csvHeaders, List`1&lt;List`1&lt;String&gt;&gt; csvData)</summary>
        </member>
        <member name="P:Sfa.Core.Text.Fakes.ShimStringBuilderExtensions.AppendHtmlLineStringBuilder">
            <summary>Sets the shim of StringBuilderExtensions.AppendHtmlLine(StringBuilder value)</summary>
        </member>
        <member name="M:Sfa.Core.Text.Fakes.ShimStringBuilderExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Text.Fakes.ShimStringBuilderExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Text.Fakes.ShimStringBuilderExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Sfa.Core.Text.Fakes.ShimStringExtensions">
            <summary>Shim type of Sfa.Core.Text.StringExtensions</summary>
        </member>
        <member name="M:Sfa.Core.Text.Fakes.ShimStringExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Text.Fakes.ShimStringExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Text.Fakes.ShimStringExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Text.Fakes.ShimStringExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Text.Fakes.ShimStringExtensions.DomainMapperMatch">
            <summary>Sets the shim of StringExtensions.DomainMapper(Match match)</summary>
        </member>
        <member name="P:Sfa.Core.Text.Fakes.ShimStringExtensions.IsValidEmailString">
            <summary>Sets the shim of StringExtensions.IsValidEmail(String email)</summary>
        </member>
        <member name="T:Sfa.Core.Threading.Fakes.ShimTaskExtensions">
            <summary>Shim type of Sfa.Core.Threading.TaskExtensions</summary>
        </member>
        <member name="M:Sfa.Core.Threading.Fakes.ShimTaskExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Sfa.Core.Threading.Fakes.ShimTaskExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Threading.Fakes.ShimTaskExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Sfa.Core.Threading.Fakes.ShimTaskExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Sfa.Core.Threading.Fakes.ShimTaskExtensions.GetSafeResultOf1TaskOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Threading.Tasks.Task{``0},``0})">
            <summary>Sets the shim of TaskExtensions.GetSafeResult(Task`1&lt;!!0&gt; task)</summary>
        </member>
    </members>
</doc>
